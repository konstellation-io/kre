apiVersion: v1
kind: ConfigMap
metadata:
  name: kre-mongo-init-script
  labels:
  {{- include "kre.labels" . | nindent 4 }}

data:
  init-admin.js: |
    conn = new Mongo();
    db = conn.getDB("kre");
    try {
        db.createRole({
        role: "readWriteMinusDropRole",
        privileges: [
        {
            resource: { db: "kre", collection: ""},
            actions: [ "collStats", "dbHash", "dbStats", "find", "killCursors", "listIndexes", "listCollections", "convertToCapped", "createCollection", "createIndex", "dropIndex", "insert", "remove", "renameCollectionSameDB", "update"]} ],
            roles: []
        }
        );
    } catch (e) {
        print("Role for readWriteMinusDropRole for 'kre' already exists")
    }

    try {
        db.createUser({user: "{{ .Values.engine.mongodb.mongodbUsername }}", pwd: "{{ .Values.engine.mongodb.mongodbPassword }}", roles: [{role: 'readWriteMinusDropRole', db: "kre"}]})
    } catch (e) {
        print("User {{ .Values.engine.mongodb.mongodbUsername }} admin for 'kre' database already exists")
    }

    try {
        db.getCollection('users').insert({
            "_id": "kre_admin_user",
            "email": "{{ .Values.engine.config.admin.userEmail }}",
            "deleted": false,
            "accessLevel": "ADMIN",
            "creationDate": ISODate("2000-01-01T00:00:00.001Z")
            })
    } catch (error) {
        print("User {{ .Values.engine.mongodb.mongodbUsername }} for KRE already exists")
    }
