{{ if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
  {{ else if .Capabilities.APIVersions.Has "apps/v1beta1" }}
apiVersion: apps/v1beta1
  {{ end }}
kind: StatefulSet
metadata:
  name: kre-mongo
  labels:
    {{ include "runtime.labels" . | nindent 4 }}
    app: kre-mongo
    kre-app: kre-mongo
spec:
  replicas: 1
  serviceName: kre-mongo
  selector:
    matchLabels:
      {{- include "runtime.labels" . | nindent 6 }}
      app: kre-mongo
      kre-app: kre-mongo
  template:
    metadata:
      labels:
        {{ include "runtime.labels" . | nindent 8 }}
        app: kre-mongo
        kre-app: kre-mongo
    spec:
      containers:
        - name: kre-mongo
          image: mongo:4.2.8
          imagePullPolicy: IfNotPresent
          args:
            - "--replSet=rs0"
          envFrom:
            - secretRef:
                name: kre-mongo-secret
            - secretRef:
                name: kre-mongo-express-secret
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: {{ .Release.Name }}-mongo-pvc
              mountPath: "/data/db"
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: init-scripts
          configMap:
            name: kre-mongo-init-script
            defaultMode: 0777
    {{- with .Values.mongodb.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.mongodb.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.mongodb.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Release.Name }}-mongo-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.mongodb.persistentVolume.storageClass }}
        resources:
          requests:
            storage:  {{ .Values.mongodb.persistentVolume.size }}
