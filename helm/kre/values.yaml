## Provide a name in place of kre for `app.kubernetes.io/name` labels
##
nameOverride: ""

developmentMode: false

runtimeName: "My Runtime"

rbac:
  createServiceAccount: true
  serviceAccount: k8s-manager

mongodb:
  service:
    name: "mongodb"
  auth:
    adminUser: "admin"
    adminPassword: "123456"
  mongodbUsername: "admin"
  mongodbPassword: "123456"
  storage:
    className: standard
    size: 3G
  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: debian
      tag: buster-slim
  initConfigMap:
    name: kre-mongo-init-script
  persistentVolume:
    enabled: true
    storageClass: standard
    size: 5Gi

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules to the MongoDB pods
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  ## Tolerations for use with node taints
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

# Config from kre/helm
config:
  baseDomainName: "local"
  admin:
    apiHost: api.kre.local
    frontendBaseURL: http://admin.kre.local
    corsEnabled: true
    userEmail: dev@local.local
  smtp:
    enabled: false
  auth:
    verificationCodeDurationInMinutes: 1
    jwtSignSecret: jwt_secret
    apiTokenSecret: api_token_secret
    secureCookie: false
    cookieDomain: kre.local

adminApi:
  logLevel: INFO
  image:
    repository: konstellation/kre-admin-api
    tag: latest
    pullPolicy: IfNotPresent
  tls:
    enabled: false
  host: api.kre.local
  ingress:
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 100000m
      nginx.org/client-max-body-size: 100000m
      nginx.org/websocket-services: admin-api
      
      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/proxy-body-size: 100000m
      # nginx.org/client-max-body-size: 100000m
      # nginx.org/websocket-services: admin-api
      # cert-manager.io/issuer: your-issuer

      ## Ensure different annotations are provided when another ingress controller is being used
      ## (for example, through an additional values.yaml)
      ## For example, when the ingress controller is Traefik instead of Nginx:
      ##
      # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # kubernetes.io/ingress.class: traefik
      
      
  storage:
    class: standard
    size: 1Gi
    path: /admin-api-files

adminUI:
  image:
    repository: konstellation/kre-admin-ui
    tag: latest
    pullPolicy: IfNotPresent
  ingress:
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      kubernetes.io/ingress.class: nginx

      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # kubernetes.io/ingress.class: nginx
      # cert-manager.io/issuer: your-issuer

      ## Ensure different annotations are provided when another ingress controller is being used
      ## (for example, through an additional values.yaml)
      ## For example, when the ingress controller is Traefik instead of Nginx:
      ##
      # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # kubernetes.io/ingress.class: traefik
  tls:
    enabled: false
  host: admin.kre.local

k8sManager:
  image:
    repository: konstellation/kre-k8s-manager
    tag: latest
    pullPolicy: IfNotPresent

mongoWriter:
  image:
    repository: konstellation/kre-mongo-writer
    tag: latest
    pullPolicy: IfNotPresent

entrypoint:
  tls: false
  host: "local"
  ingress:
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/default-backend: runtime-default-backend
      nginx.ingress.kubernetes.io/custom-http-errors: "404,503,502"

      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # kubernetes.io/ingress.class: nginx
      # cert-manager.io/issuer: your-issuer

      ## Ensure different annotations are provided when another ingress controller is being used
      ## (for example, through an additional values.yaml)
      ## For example, when the ingress controller is Traefik instead of Nginx:
      ##
      # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # kubernetes.io/ingress.class: traefik

  grpc:
    ingress:
      annotations:
        ## This Chart has been developed using Nginx Ingress Controller by default.
        ## Using the following default annotations ensures its correct operation.
        ## Ref: https://kubernetes.github.io/ingress-nginx/
        ##
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/proxy-body-size: 16m
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        # Based on this snippet:
        # https://github.com/kubernetes/ingress-nginx/issues/5609#issuecomment-634908849
        nginx.ingress.kubernetes.io/server-snippet: |
          error_page 404 = @grpc_unimplemented;
          error_page 502 503 = @grpc_unavailable;
          location @grpc_unimplemented {
              add_header grpc-status 12;
              add_header grpc-message unimplemented;
              return 204;
          }
          location @grpc_unavailable {
              add_header grpc-status 14;
              add_header grpc-message unavailable;
              return 204;
          }
          default_type application/grpc;
        
        ## If additional annotations are needed to configure it, provide an additional
        ## file ensuring they are appended to the default ones.
        ##
        ## Example:
        ##
        # kubernetes.io/ingress.class: nginx
        # cert-manager.io/issuer: your-issuer

        ## Ensure different annotations are provided when another ingress controller is being used
        ## (for example, through an additional values.yaml)
        ## For example, when the ingress controller is Traefik instead of Nginx:
        ##
        # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
        # kubernetes.io/ingress.class: traefik
        # traefik.ingress.kubernetes.io/service.serversscheme: h2c

nats_streaming:
  replicas: 1
  storage:
    className: standard
    size: 1Gi

chronograf:
  persistence:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteOnce
    size: 2Gi

influxdb:
  image:
    tag: 1.8.1
  config:
    http:
      enabled: true
      flux-enabled: true
      auth-enabled: false
  persistence:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteOnce
    size: 10Gi
  initScripts:
    enabled: true
    scripts:
      init.iql: |+
        CREATE DATABASE "kre"

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules to the InfluxDB pods
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  ## Tolerations for use with node taints
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

## Using default values from https://github.com/influxdata/helm-charts/blob/master/charts/kapacitor/values.yaml
##
kapacitor:
  enabled: false

  ## If kapacitor enabled, set influxURL=http://<chart_release>-influxdb:8086
  ## Where <chart_release> is the release name by with the chart is deployed
  #
  #influxURL: http://kre-local-influxdb:8086
  
  ## Persistence is disabled by default
  #
  # persistence:
  #   enabled: true
  #   storageClass: default
  #   accessMode: ReadWriteOnce
  #   size: 1Gi
