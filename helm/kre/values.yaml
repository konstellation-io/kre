developmentMode: false
argocd: false

runtimeName: "My Runtime"

rbac:
  createServiceAccount: true
  serviceAccount: k8s-manager

mongodb:
  service:
    name: "mongodb"
  auth:
    adminUser: "admin"
    adminPassword: "123456"
  mongodbUsername: "admin"
  mongodbPassword: "123456"
  storage:
    className: standard
    size: 3G
  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: debian
      tag: buster-slim
  initConfigMap:
    name: kre-mongo-init-script
  persistentVolume:
    enabled: true
    storageClass: standard
    size: 5Gi

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules to the MongoDB pods
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  ## Tolerations for use with node taints
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

# Config from kre/helm
config:
  baseDomainName: "local"
  admin:
    apiHost: api.kre.local
    frontendBaseURL: http://admin.kre.local
    corsEnabled: true
    userEmail: dev@local.local
  smtp:
    enabled: false
  auth:
    verificationCodeDurationInMinutes: 1
    jwtSignSecret: jwt_secret
    apiTokenSecret: api_token_secret
    secureCookie: false
    cookieDomain: kre.local

adminApi:
  image:
    repository: konstellation/kre-admin-api
    tag: latest
    pullPolicy: IfNotPresent
  tls:
    enabled: false
  host: api.kre.local
  storage:
    class: standard
    size: 1Gi
    path: /admin-api-files

adminUI:
  image:
    repository: konstellation/kre-admin-ui
    tag: latest
    pullPolicy: IfNotPresent
  tls:
    enabled: false
  host: admin.kre.local

k8sManager:
  image:
    repository: konstellation/kre-k8s-manager
    tag: latest
    pullPolicy: IfNotPresent

mongoWriter:
  image:
    repository: konstellation/kre-mongo-writer
    tag: latest
    pullPolicy: IfNotPresent

certManager:
  enabled: false
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: user@email.com

entrypoint:
  tls: false
  host: "local"

nats_streaming:
  replicas: 1
  storage:
    className: standard
    size: 1Gi

chronograf:
  persistence:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteOnce
    size: 2Gi

prometheus-operator:
  enabled: true
  grafana:
    enabled: false
  defaultRules:
    create: false
  alertmanager:
    config:
      route:
        group_by: [ 'job' ]
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: "kre-email"
        routes:
          - match:
              alertname: Mongo
          - match:
              alertname: NATS
          - match:
              alertname: Minio
          - match:
              alertname: InfluxDB
      receivers:
        - name: 'kre-email'
          email_configs:
            - to: user@example.com
              from: from_user@example.com
              # Your smtp server address
              smarthost: smtp.example.com:587
              auth_username: from_user@example.com
              auth_identity: from_user@example.com
              auth_password: 1234

influxdb:
  image:
    tag: 1.8.1
  config:
    http:
      enabled: true
      flux-enabled: true
      auth-enabled: false
  persistence:
    enabled: true
    storageClass: "standard"
    accessMode: ReadWriteOnce
    size: 10Gi
  initScripts:
    enabled: true
    scripts:
      init.iql: |+
        CREATE DATABASE "kre"

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules to the InfluxDB pods
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  ## Tolerations for use with node taints
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

## Using default values from https://github.com/influxdata/helm-charts/blob/master/charts/kapacitor/values.yaml
##
kapacitor:
  enabled: false

  ## If kapacitor enabled, set influxURL=http://<chart_release>-influxdb:8086
  ## Where <chart_release> is the release name by with the chart is deployed
  #
  #influxURL: http://kre-local-influxdb:8086
  
  ## Persistence is disabled by default
  #
  # persistence:
  #   enabled: true
  #   storageClass: default
  #   accessMode: ReadWriteOnce
  #   size: 1Gi
