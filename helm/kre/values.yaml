# -- Provide a name in place of kre for `app.kubernetes.io/name` labels
nameOverride: ""

# -- Whether to setup developement mode
developmentMode: false

rbac:
  # -- Whether to create the roles for the services that could use custom Service Accounts
  create: true

mongoExpress:
  image:
    # -- The image repository
    repository: mongo-express
    # -- The image tag
    tag: "0.54.0"
    # -- The image pull policy
    pullPolicy: IfNotPresent
  connectionString:
    # -- The name of the secret that contains a key with the MongoDB connection string.
    secretName: ""
    # --The name of the secret key that contains the MongoDB connection string.
    secretKey: ""

# Config from kre/helm
config:
  # -- Base domain name for Admin API and K8S Manager apps
  baseDomainName: "local"
  admin:
    # -- Api Hostname for Admin UI and Admin API
    apiHost: api.kre.local
    # -- Frontend Base URL for Admin API
    frontendBaseURL: http://admin.kre.local
    # -- Whether to enable CORS on Admin API
    corsEnabled: true
    # -- Email address for sending notifications
    userEmail: dev@local.local
  smtp:
    # -- Whether to enable SMTP server connection
    enabled: false
    # -- SMTP server user
    user: ""
    # -- SMTP server password
    pass: ""
  auth:
    # -- Verification login link duration
    verificationCodeDurationInMinutes: 1
    # -- JWT Sign secret
    jwtSignSecret: jwt_secret
    # -- API token secret
    apiTokenSecret: api_token_secret
    # -- Whether to enable secure cookie for Admin API
    secureCookie: false
    # -- Admin API secure cookie domain
    cookieDomain: kre.local
  mongodb:
    connectionString:
      # -- The name of the secret that contains a key with the MongoDB connection string.
      secretName: ""
      # --The name of the secret key that contains the MongoDB connection string.
      secretKey: ""

adminApi:
  # -- Default application log level
  logLevel: INFO
  image:
    # -- Image repository
    repository: konstellation/kre-admin-api
    # -- Image tag
    tag: latest
    # -- Image pull policy
    pullPolicy: IfNotPresent
  tls:
    # -- Whether to enable TLS
    enabled: false
  # -- Hostname
  host: api.kre.local
  ingress:
    ## This Chart has been developed using Nginx Ingress Controller by default.
    ## Using the following default annotations ensures its correct operation.
    ## Ref: https://kubernetes.github.io/ingress-nginx/
    ##

    # -- The name of the ingress class to use
    className: nginx
    # -- Ingress annotations
    # @default -- See `adminApi.ingress.annotations` in [values.yaml](./values.yaml)
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 100000m
      nginx.org/client-max-body-size: 100000m
      nginx.org/websocket-services: admin-api

      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # nginx.ingress.kubernetes.io/proxy-body-size: 100000m
      # nginx.org/client-max-body-size: 100000m
      # nginx.org/websocket-services: admin-api
      # cert-manager.io/issuer: your-issuer

      ## Ensure different annotations are provided when another ingress controller is being used
      ## (for example, through an additional values.yaml)
      ## For example, when the ingress controller is Traefik instead of Nginx:
      ##
      # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # kubernetes.io/ingress.class: traefik

  storage:
    # -- Storage class name
    class: standard
    # -- Storage class size
    size: 1Gi
    # -- Persistent volume mount point. This will define Admin API app workdir too.
    path: /admin-api-files

adminUI:
  image:
    # -- Image repository
    repository: konstellation/kre-admin-ui
    # -- Image tag
    tag: latest
    # -- Image pull policy
    pullPolicy: IfNotPresent
  ingress:
    ## This Chart has been developed using Nginx Ingress Controller by default.
    ## Using the following default annotations ensures its correct operation.
    ## Ref: https://kubernetes.github.io/ingress-nginx/
    ##
    # -- The name of the ingress class to use
    className: nginx
    # -- Ingress annotations
    annotations: {}
      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # kubernetes.io/ingress.class: nginx
      # cert-manager.io/issuer: your-issuer

      ## Ensure different annotations are provided when another ingress controller is being used
      ## (for example, through an additional values.yaml)
      ## For example, when the ingress controller is Traefik instead of Nginx:
      ##
      # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # kubernetes.io/ingress.class: traefik
  tls:
    # -- Whether to enable TLS
    enabled: false
  # -- Hostname
  host: admin.kre.local

k8sManager:
  image:
    # -- Image repository
    repository: konstellation/kre-k8s-manager
    # -- Image tag
    tag: latest
    # -- Image pull policy
    pullPolicy: IfNotPresent
  serviceAccount:
    # -- Whether to create the Service Account
    create: true
    # -- The name of the service account.
    # @default: A pre-generated name based on the chart relase fullname sufixed by `-k8s-manager`
    name: ""
    # -- The Service Account annotations
    annotations: {}
  krtFilesDownloader:
    image:
      # -- Image repository
      repository: konstellation/krt-files-downloader
      # -- Image tag
      tag: latest
      # -- Image pull policy
      pullPolicy: Always
  generatedEntrypoints:
    # -- Wether to enable tls
    tls: false
    ingress:
      # -- The ingressClassName to use for the enypoints' generated ingresses
      className: "nginx"
      # -- The annotations that all the generated ingresses for the entrypoints will have
      # @default -- See `entrypoints.ingress.annotations` in [values.yaml](./values.yaml)
      annotations:
        ## This Chart has been developed using Nginx Ingress Controller by default.
        ## Using the following default annotations ensures its correct operation.
        ## Ref: https://kubernetes.github.io/ingress-nginx/
        ##
        nginx.ingress.kubernetes.io/proxy-body-size: 16m
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        # Based on this snippet:
        # https://github.com/kubernetes/ingress-nginx/issues/5609#issuecomment-634908849
        nginx.ingress.kubernetes.io/server-snippet: |
          error_page 404 = @grpc_unimplemented;
          error_page 502 503 = @grpc_unavailable;
          location @grpc_unimplemented {
              add_header grpc-status 12;
              add_header grpc-message unimplemented;
              return 204;
          }
          location @grpc_unavailable {
              add_header grpc-status 14;
              add_header grpc-message unavailable;
              return 204;
          }
          default_type application/grpc;

        ## If additional annotations are needed to configure it, provide an additional
        ## file ensuring they are appended to the default ones.
        ##
        ## Example:
        ##
        # cert-manager.io/issuer: your-issuer

        ## Ensure different annotations are provided when another ingress controller is being used
        ## (for example, through an additional values.yaml)
        ## For example, when the ingress controller is Traefik instead of Nginx:
        ##
        # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
        # kubernetes.io/ingress.class: traefik
        # traefik.ingress.kubernetes.io/service.serversscheme: h2c
      tls:
        # -- TLS certificate secret name. If defined, wildcard for the current application domain must be used.
        # @default -- If not defined, every created ingress will use an autogenerated certificate name based on the deployed runtimeId and .Values.config.baseDomainName.
        secretName: ""

mongoWriter:
  image:
    # -- Image repository
    repository: konstellation/kre-mongo-writer
    # -- Image tag
    tag: latest
    # -- Image pull policy
    pullPolicy: IfNotPresent

nats:
  image:
    # -- Image repository
    repository: nats
    # -- Image tag
    tag: 2.8.4
    # -- Image pull policy
    pullPolicy: IfNotPresent
  client:
    # -- Port for client connections
    port: 4222
  jetstream:
    storage:
      # -- Whether to enable a PersistentVolumeClaim for Jetstream
      enabled: true
      # -- Storage class name for the Jetstream PersistentVolumeClaim
      storageClassName: standard
      # -- Storage size for the Jetstream PersistentVolumeClaim. Notice this is also used for the Jetstream storage limit configuration even if PVC creation is disabled
      size: 1Gi
      # -- Directory to use for JetStream storage when using a PersistentVolumeClaim
      storageDirectory: /data
    memStorage:
      # -- Whether to enable memory storage for Jetstream
      enabled: true
      # -- Memory storage max size for JetStream
      size: 1Gi
  logging:
    # -- Whether to enable logging debug mode
    debug: false
    # -- Whether to enable logging trace mode
    trace: false
    # -- Timestamp log entries
    logtime: true

  # -- Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  # -- Assign custom affinity rules to the InfluxDB pods
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kuberHELMnetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  # -- Tolerations for use with node taints
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

chronograf:
  persistence:
    # -- Whether to enable persistence
    enabled: true
    # -- Storage class name
    storageClass: "standard"
    # -- Access mode for the volume
    accessMode: ReadWriteOnce
    # -- Storage size
    size: 2Gi

influxdb:
  image:
    # -- Image tag
    tag: 1.8.1
  config:
    # -- [Details](https://docs.influxdata.com/influxdb/v1.8/administration/config/#http)
    http:
      enabled: true
      flux-enabled: true
      auth-enabled: false
  persistence:
    # -- Whether to enable persistence. See https://github.com/influxdata/helm-charts/tree/master/charts/influxdb#configure-the-chart for more info
    enabled: true
    # -- Storage class name
    storageClass: "standard"
    # -- Access mode for the volume
    accessMode: ReadWriteOnce
    # -- Storage size
    size: 10Gi
  initScripts:
    # -- Boolean flag to enable and disable initscripts. See https://github.com/influxdata/helm-charts/tree/master/charts/influxdb#configure-the-chart for more info
    enabled: true
    # -- Init scripts
    scripts:
      init.iql: |+
        CREATE DATABASE "kre"
  address: http://kre-influxdb/
  # -- Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  # -- Assign custom affinity rules to the InfluxDB pods
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kuberHELMnetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  # -- Tolerations for use with node taints
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

## Using default values from https://github.com/influxdata/helm-charts/blob/master/charts/kapacitor/values.yaml
##
kapacitor:
  # -- Whether to enable Kapacitor
  enabled: false

  ## If kapacitor enabled, set influxURL=http://<chart_release>-influxdb:8086
  ## Where <chart_release> is the release name by with the chart is deployed
  #
  #influxURL: http://kre-local-influxdb:8086

  ## Persistence is disabled by default
  ##
  persistence:
    # -- Whether to enable persistence [Details](https://github.com/influxdata/helm-charts/blob/master/charts/kapacitor/values.yaml)
    enabled: false

  # persistence:
  #   enabled: true
  #   storageClass: default
  #   accessMode: ReadWriteOnce
  #   size: 1Gi
