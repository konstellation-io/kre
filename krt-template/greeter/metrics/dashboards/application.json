{
  "id": "2",
  "cells": [
    {
      "i": "ca4febb5-7964-4581-a04a-3230761c6cea",
      "x": 7,
      "y": 0,
      "w": 5,
      "h": 5,
      "name": "Workflows processing time",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"_time\", \"workflow\", \"_value\"])\n  |> aggregateWindow(every: autoInterval, fn: sum)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"workflow\"], valueColumn: \"_value\")\n  ",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"_time\", \"workflow\", \"_value\"])\n  |> aggregateWindow(every: autoInterval, fn: sum)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"workflow\"], valueColumn: \"_value\")\n  ",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "Processing time (ms)",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "bar",
      "colors": [
        {
          "id": "03486d0a-ec55-4798-b61b-f031a0ad5bf4",
          "type": "scale",
          "hex": "#31C0F6",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "567fee98-e5fb-4f72-999e-ec155d5211cb",
          "type": "scale",
          "hex": "#A500A5",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "5e648d36-c4de-47eb-95e0-26968dfb1e86",
          "type": "scale",
          "hex": "#FF7E27",
          "name": "Nineteen Eighty Four",
          "value": "0"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "_time",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "go-descriptor",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "go-greeting",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/4/cells/ca4febb5-7964-4581-a04a-3230761c6cea"
      }
    },
    {
      "i": "6998b729-37e2-424a-8500-489a2dc09bc0",
      "x": 6,
      "y": 5,
      "w": 6,
      "h": 3,
      "name": "Nodes waiting time (ms)",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#ffffff",
          "name": "white",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "node",
          "displayName": "Node",
          "visible": true
        },
        {
          "internalName": "min",
          "displayName": "Min",
          "visible": true
        },
        {
          "internalName": "max",
          "displayName": "Max",
          "visible": true
        },
        {
          "internalName": "avg",
          "displayName": "Avg",
          "visible": true
        },
        {
          "internalName": "total",
          "displayName": "Total",
          "visible": true
        },
        {
          "internalName": "workflow",
          "displayName": "",
          "visible": false
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 1
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/4/cells/6998b729-37e2-424a-8500-489a2dc09bc0"
      }
    },
    {
      "i": "1ec3bfb0-7800-427d-9fe6-8643cfc9470c",
      "x": 0,
      "y": 5,
      "w": 6,
      "h": 3,
      "name": "Nodes processing time (ms)",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#ffffff",
          "name": "white",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "node",
          "displayName": "Node",
          "visible": true
        },
        {
          "internalName": "min",
          "displayName": "Min",
          "visible": true
        },
        {
          "internalName": "max",
          "displayName": "Max",
          "visible": true
        },
        {
          "internalName": "avg",
          "displayName": "Avg",
          "visible": true
        },
        {
          "internalName": "total",
          "displayName": "Total",
          "visible": true
        },
        {
          "internalName": "workflow",
          "displayName": "",
          "visible": false
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 1
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/4/cells/1ec3bfb0-7800-427d-9fe6-8643cfc9470c"
      }
    },
    {
      "i": "d395361b-73f5-48fa-87a5-dfd984610a50",
      "x": 2,
      "y": 0,
      "w": 5,
      "h": 5,
      "name": "Requests evolution",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"_time\"])\n  |> map(fn: (r) => ({ r with _value: 1 }))\n  |> group()\n  |> aggregateWindow(every: autoInterval, fn: sum)\n  |> drop(columns: [\"_start\", \"_stop\"])\n",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"_time\"])\n  |> map(fn: (r) => ({ r with _value: 1 }))\n  |> group()\n  |> aggregateWindow(every: autoInterval, fn: sum)\n  |> drop(columns: [\"_start\", \"_stop\"])\n",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "#Requests",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "03486d0a-ec55-4798-b61b-f031a0ad5bf4",
          "type": "scale",
          "hex": "#31C0F6",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "567fee98-e5fb-4f72-999e-ec155d5211cb",
          "type": "scale",
          "hex": "#A500A5",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "5e648d36-c4de-47eb-95e0-26968dfb1e86",
          "type": "scale",
          "hex": "#FF7E27",
          "name": "Nineteen Eighty Four",
          "value": "0"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "_value",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "_time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/4/cells/d395361b-73f5-48fa-87a5-dfd984610a50"
      }
    },
    {
      "i": "7210b06e-3969-49fd-a1f6-4275d9eb41fe",
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 5,
      "name": "Total requests",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> group()\n  |> count()",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> group()\n  |> count()",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": " requests",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "single-stat",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#00C9FF",
          "name": "laser",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 0
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/4/cells/7210b06e-3969-49fd-a1f6-4275d9eb41fe"
      }
    }
  ],
  "templates": [],
  "name": "Application",
  "organization": "default"
}
