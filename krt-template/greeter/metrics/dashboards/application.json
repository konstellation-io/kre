{
  "id": "2",
  "cells": [
    {
      "i": "aa1fd9e7-a6aa-4304-a233-5384bab491f9",
      "x": 7,
      "y": 0,
      "w": 5,
      "h": 3,
      "name": "Workflows processing time",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\")\n  |> keep(columns: [\"_time\", \"workflow\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"workflow\"], valueColumn: \"_value\")",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\")\n  |> keep(columns: [\"_time\", \"workflow\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"workflow\"], valueColumn: \"_value\")",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "Processing time (ms)",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "050997b2-481c-43ac-82bc-e46bd2f10e33",
          "type": "scale",
          "hex": "#31C0F6",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "ef2b2eab-8db4-4de2-96fc-91b49e826562",
          "type": "scale",
          "hex": "#A500A5",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "5279a1cb-b653-4889-8ff7-b8e670bef024",
          "type": "scale",
          "hex": "#FF7E27",
          "name": "Nineteen Eighty Four",
          "value": "0"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/aa1fd9e7-a6aa-4304-a233-5384bab491f9"
      }
    },
    {
      "i": "fe14ff6c-6cbd-4d5e-ae85-6107f5ed6430",
      "x": 7,
      "y": 6,
      "w": 5,
      "h": 3,
      "name": "SaveMetrics waiting times",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and (r.workflow == \"SaveMetrics\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and (r.workflow == \"SaveMetrics\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "Waiting time (ms)",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "61321b43-7aa1-44b4-9c1d-1f369c580e8c",
          "type": "scale",
          "hex": "#8F8AF4",
          "name": "Do Androids Dream of Electric Sheep?",
          "value": "0"
        },
        {
          "id": "e93f4545-7efd-4a0f-8c57-af5f1711209b",
          "type": "scale",
          "hex": "#A51414",
          "name": "Do Androids Dream of Electric Sheep?",
          "value": "0"
        },
        {
          "id": "bb91d714-9a2b-4f84-9347-8615489ca85c",
          "type": "scale",
          "hex": "#F4CF31",
          "name": "Do Androids Dream of Electric Sheep?",
          "value": "0"
        }
      ],
      "legend": {
        "type": "static",
        "orientation": "bottom"
      },
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/fe14ff6c-6cbd-4d5e-ae85-6107f5ed6430"
      }
    },
    {
      "i": "46f1e764-98f7-4225-b426-47a766c6b0fe",
      "x": 7,
      "y": 3,
      "w": 5,
      "h": 3,
      "name": "Prediction waiting times",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and (r.workflow == \"Prediction\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")\n",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and (r.workflow == \"Prediction\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")\n",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "Waiting time (ms)",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "33cd6cb6-6063-40e6-9a0f-6cafc886a6a0",
          "type": "scale",
          "hex": "#FDC44F",
          "name": "Cthulhu",
          "value": "0"
        },
        {
          "id": "52e7f557-6a00-4882-a84c-1b2370f516de",
          "type": "scale",
          "hex": "#007C76",
          "name": "Cthulhu",
          "value": "0"
        },
        {
          "id": "48e5e99d-e893-4fe4-9bdc-38006a137233",
          "type": "scale",
          "hex": "#8983FF",
          "name": "Cthulhu",
          "value": "0"
        }
      ],
      "legend": {
        "type": "static",
        "orientation": "bottom"
      },
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/46f1e764-98f7-4225-b426-47a766c6b0fe"
      }
    },
    {
      "i": "1162e72c-c89e-40cd-b729-baceeae12db7",
      "x": 6,
      "y": 9,
      "w": 6,
      "h": 3,
      "name": "Nodes waiting time (ms)",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#ffffff",
          "name": "white",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "node",
          "displayName": "Node",
          "visible": true
        },
        {
          "internalName": "min",
          "displayName": "Min",
          "visible": true
        },
        {
          "internalName": "max",
          "displayName": "Max",
          "visible": true
        },
        {
          "internalName": "avg",
          "displayName": "Avg",
          "visible": true
        },
        {
          "internalName": "total",
          "displayName": "Total",
          "visible": true
        },
        {
          "internalName": "workflow",
          "displayName": "",
          "visible": false
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 1
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/1162e72c-c89e-40cd-b729-baceeae12db7"
      }
    },
    {
      "i": "2fb7da01-2095-4705-aac7-90fe6a98c1ad",
      "x": 0,
      "y": 12,
      "w": 12,
      "h": 5,
      "name": "Nodes processing time by tracking_id (ms)",
      "queries": [
        {
          "query": "elapsed_w1 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and r.workflow == \"Prediction\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n \nwaiting_w1 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and r.workflow == \"Prediction\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n\nw1 = join(tables: {Elapsed: elapsed_w1, Waiting: waiting_w1}, on: [\"tracking_id\", \"workflow\"], method: \"inner\")\n\nelapsed_w2 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and r.workflow == \"SaveMetrics\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n \nwaiting_w2 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and r.workflow == \"SaveMetrics\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n\nw2 = join(tables: {elapsed: elapsed_w2, waiting: waiting_w2}, on: [\"tracking_id\", \"workflow\"], method: \"inner\")\n  \nunion(tables: [w1, w2])\n  |> group(columns: [\"workflow\"])\n",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "elapsed_w1 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and r.workflow == \"Prediction\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n \nwaiting_w1 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and r.workflow == \"Prediction\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n\nw1 = join(tables: {Elapsed: elapsed_w1, Waiting: waiting_w1}, on: [\"tracking_id\", \"workflow\"], method: \"inner\")\n\nelapsed_w2 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and r.workflow == \"SaveMetrics\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n \nwaiting_w2 = from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"waiting_ms\") and r.workflow == \"SaveMetrics\")\n  |> keep(columns: [\"node\", \"_value\", \"tracking_id\", \"workflow\"])\n  |> pivot(rowKey:[\"tracking_id\"], columnKey: [\"node\"], valueColumn: \"_value\")\n\nw2 = join(tables: {elapsed: elapsed_w2, waiting: waiting_w2}, on: [\"tracking_id\", \"workflow\"], method: \"inner\")\n  \nunion(tables: [w1, w2])\n  |> group(columns: [\"workflow\"])\n",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#ffffff",
          "name": "white",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "tracking_id",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "workflow",
          "displayName": "",
          "visible": false
        },
        {
          "internalName": "data-preparation_Elapsed",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "data-preparation_Waiting",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "model-inference_Elapsed",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "model-inference_Waiting",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "output-preparation_Elapsed",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "output-preparation_Waiting",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 0
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/2fb7da01-2095-4705-aac7-90fe6a98c1ad"
      }
    },
    {
      "i": "570e0b11-01fb-4374-88a8-73fc693a2797",
      "x": 0,
      "y": 9,
      "w": 6,
      "h": 3,
      "name": "Nodes processing time (ms)",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#ffffff",
          "name": "white",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "node",
          "displayName": "Node",
          "visible": true
        },
        {
          "internalName": "min",
          "displayName": "Min",
          "visible": true
        },
        {
          "internalName": "max",
          "displayName": "Max",
          "visible": true
        },
        {
          "internalName": "avg",
          "displayName": "Avg",
          "visible": true
        },
        {
          "internalName": "total",
          "displayName": "Total",
          "visible": true
        },
        {
          "internalName": "workflow",
          "displayName": "",
          "visible": false
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 1
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/570e0b11-01fb-4374-88a8-73fc693a2797"
      }
    },
    {
      "i": "a090780f-6914-4395-b143-f0a70705a3c8",
      "x": 2,
      "y": 6,
      "w": 5,
      "h": 3,
      "name": "SaveMetrics processing times",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and (r.workflow == \"SaveMetrics\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and (r.workflow == \"SaveMetrics\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "Processing time (ms)",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "61321b43-7aa1-44b4-9c1d-1f369c580e8c",
          "type": "scale",
          "hex": "#8F8AF4",
          "name": "Do Androids Dream of Electric Sheep?",
          "value": "0"
        },
        {
          "id": "e93f4545-7efd-4a0f-8c57-af5f1711209b",
          "type": "scale",
          "hex": "#A51414",
          "name": "Do Androids Dream of Electric Sheep?",
          "value": "0"
        },
        {
          "id": "bb91d714-9a2b-4f84-9347-8615489ca85c",
          "type": "scale",
          "hex": "#F4CF31",
          "name": "Do Androids Dream of Electric Sheep?",
          "value": "0"
        }
      ],
      "legend": {
        "type": "static",
        "orientation": "bottom"
      },
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/a090780f-6914-4395-b143-f0a70705a3c8"
      }
    },
    {
      "i": "e2997fb6-d315-41a7-8963-9dcc23a6c7e6",
      "x": 2,
      "y": 3,
      "w": 5,
      "h": 3,
      "name": "Prediction processing times",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and (r.workflow == \"Prediction\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")\n",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\") and (r.workflow == \"Prediction\"))\n  |> keep(columns: [\"_time\", \"node\", \"_value\"])\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"node\"], valueColumn: \"_value\")\n",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "Processing time (ms)",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "33cd6cb6-6063-40e6-9a0f-6cafc886a6a0",
          "type": "scale",
          "hex": "#FDC44F",
          "name": "Cthulhu",
          "value": "0"
        },
        {
          "id": "52e7f557-6a00-4882-a84c-1b2370f516de",
          "type": "scale",
          "hex": "#007C76",
          "name": "Cthulhu",
          "value": "0"
        },
        {
          "id": "48e5e99d-e893-4fe4-9bdc-38006a137233",
          "type": "scale",
          "hex": "#8983FF",
          "name": "Cthulhu",
          "value": "0"
        }
      ],
      "legend": {
        "type": "static",
        "orientation": "bottom"
      },
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/e2997fb6-d315-41a7-8963-9dcc23a6c7e6"
      }
    },
    {
      "i": "a8d8ba5e-a161-4966-830c-034fc59a11f1",
      "x": 0,
      "y": 6,
      "w": 2,
      "h": 3,
      "name": " ",
      "queries": [
        {
          "query": "",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "influxql"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "note",
      "colors": [],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "### SaveMetrics\n\nNodes:\n- save-metrics",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/a8d8ba5e-a161-4966-830c-034fc59a11f1"
      }
    },
    {
      "i": "c010bb54-6237-46f0-9290-dca247e8bb8d",
      "x": 0,
      "y": 3,
      "w": 2,
      "h": 3,
      "name": " ",
      "queries": [
        {
          "query": "",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "influxql"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "note",
      "colors": [],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "### Prediction\n\nNodes:\n- data-preparation\n- model-inference\n- output-preparation",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/c010bb54-6237-46f0-9290-dca247e8bb8d"
      }
    },
    {
      "i": "0636c69f-ef54-4549-a826-3d5a73ed2a6a",
      "x": 2,
      "y": 0,
      "w": 5,
      "h": 3,
      "name": "Requests evolution",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\")\n  |> keep(columns: [\"_time\", \"tracking_id\"])\n  |> map(fn: (r) => ({ r with _value: 1 }))\n  |> group()\n  |> aggregateWindow(every: autoInterval, fn: sum)\n  |> drop(columns: [\"_start\", \"_stop\"])\n",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\")\n  |> keep(columns: [\"_time\", \"tracking_id\"])\n  |> map(fn: (r) => ({ r with _value: 1 }))\n  |> group()\n  |> aggregateWindow(every: autoInterval, fn: sum)\n  |> drop(columns: [\"_start\", \"_stop\"])\n",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "#Requests",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "050997b2-481c-43ac-82bc-e46bd2f10e33",
          "type": "scale",
          "hex": "#31C0F6",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "ef2b2eab-8db4-4de2-96fc-91b49e826562",
          "type": "scale",
          "hex": "#A500A5",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "5279a1cb-b653-4889-8ff7-b8e670bef024",
          "type": "scale",
          "hex": "#FF7E27",
          "name": "Nineteen Eighty Four",
          "value": "0"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/0636c69f-ef54-4549-a826-3d5a73ed2a6a"
      }
    },
    {
      "i": "e67d25aa-c4cd-40f0-b933-8a00fe4c716a",
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 3,
      "name": "Total requests",
      "queries": [
        {
          "query": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\")\n  |> group()\n  |> count()",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"kre/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"workflow_elapsed_time\")\n  |> group()\n  |> count()",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": " requests",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": [
            "",
            ""
          ],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "single-stat",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#00C9FF",
          "name": "laser",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "time",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 0
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/2/cells/e67d25aa-c4cd-40f0-b933-8a00fe4c716a"
      }
    }
  ],
  "templates": [],
  "name": "Application",
  "organization": "default",
  "links": {
    "self": "/chronograf/v1/dashboards/2",
    "cells": "/chronograf/v1/dashboards/2/cells",
    "templates": "/chronograf/v1/dashboards/2/templates"
  }
}
