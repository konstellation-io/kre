// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	monitoringpb "github.com/konstellation-io/kre/runtime/runtime-api/proto/monitoringpb"
	mock "github.com/stretchr/testify/mock"
)

// MonitoringServiceServer is an autogenerated mock type for the MonitoringServiceServer type
type MonitoringServiceServer struct {
	mock.Mock
}

// GetMetrics provides a mock function with given fields: _a0, _a1
func (_m *MonitoringServiceServer) GetMetrics(_a0 context.Context, _a1 *monitoringpb.GetMetricsRequest) (*monitoringpb.GetMetricsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *monitoringpb.GetMetricsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *monitoringpb.GetMetricsRequest) *monitoringpb.GetMetricsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*monitoringpb.GetMetricsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *monitoringpb.GetMetricsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NodeLogs provides a mock function with given fields: _a0, _a1
func (_m *MonitoringServiceServer) NodeLogs(_a0 *monitoringpb.NodeLogsRequest, _a1 monitoringpb.MonitoringService_NodeLogsServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*monitoringpb.NodeLogsRequest, monitoringpb.MonitoringService_NodeLogsServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SearchLogs provides a mock function with given fields: _a0, _a1
func (_m *MonitoringServiceServer) SearchLogs(_a0 context.Context, _a1 *monitoringpb.SearchLogsRequest) (*monitoringpb.SearchLogsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *monitoringpb.SearchLogsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *monitoringpb.SearchLogsRequest) *monitoringpb.SearchLogsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*monitoringpb.SearchLogsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *monitoringpb.SearchLogsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WatchNodeStatus provides a mock function with given fields: _a0, _a1
func (_m *MonitoringServiceServer) WatchNodeStatus(_a0 *monitoringpb.NodeStatusRequest, _a1 monitoringpb.MonitoringService_WatchNodeStatusServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*monitoringpb.NodeStatusRequest, monitoringpb.MonitoringService_WatchNodeStatusServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
