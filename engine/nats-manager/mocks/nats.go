// Code generated by MockGen. DO NOT EDIT.
// Source: nats.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/konstellation-io/kre/engine/nats-manager/internal/entity"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreateObjectStore mocks base method.
func (m *MockClient) CreateObjectStore(objectStore string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateObjectStore", objectStore)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateObjectStore indicates an expected call of CreateObjectStore.
func (mr *MockClientMockRecorder) CreateObjectStore(objectStore interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateObjectStore", reflect.TypeOf((*MockClient)(nil).CreateObjectStore), objectStore)
}

// CreateStream mocks base method.
func (m *MockClient) CreateStream(streamConfig *entity.StreamConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStream", streamConfig)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateStream indicates an expected call of CreateStream.
func (mr *MockClientMockRecorder) CreateStream(streamConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStream", reflect.TypeOf((*MockClient)(nil).CreateStream), streamConfig)
}

// DeleteObjectStore mocks base method.
func (m *MockClient) DeleteObjectStore(stream string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteObjectStore", stream)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteObjectStore indicates an expected call of DeleteObjectStore.
func (mr *MockClientMockRecorder) DeleteObjectStore(stream interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObjectStore", reflect.TypeOf((*MockClient)(nil).DeleteObjectStore), stream)
}

// DeleteStream mocks base method.
func (m *MockClient) DeleteStream(stream string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStream", stream)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStream indicates an expected call of DeleteStream.
func (mr *MockClientMockRecorder) DeleteStream(stream interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStream", reflect.TypeOf((*MockClient)(nil).DeleteStream), stream)
}

// GetObjectStoresNames mocks base method.
func (m *MockClient) GetObjectStoresNames() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectStoresNames")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetObjectStoresNames indicates an expected call of GetObjectStoresNames.
func (mr *MockClientMockRecorder) GetObjectStoresNames() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectStoresNames", reflect.TypeOf((*MockClient)(nil).GetObjectStoresNames))
}
