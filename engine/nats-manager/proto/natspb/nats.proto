syntax = "proto3";

package nats;
option go_package = "./natspb";

enum ObjectStoreScope{
  SCOPE_WORKFLOW = 0;
  SCOPE_PROJECT = 1;
}

message ObjectStore {
  string name = 1;
  ObjectStoreScope scope = 2;
}

message Node {
  string name = 1;
  repeated string subscriptions = 2;
  optional ObjectStore object_store = 3;
}

message Workflow {
  string name = 1;
  string entrypoint = 2;
  repeated Node nodes = 3;
}

message CreateStreamsRequest {
  string runtime_id = 1;
  string version_name = 2;
  repeated Workflow workflows = 3;
}

message CreateObjectStoresRequest {
  string runtime_id = 1;
  string version_name = 2;
  repeated Workflow workflows = 3;
}

message CreateKeyValueStoresRequest {
  string runtime_id = 1;
  string version_name = 2;
  repeated Workflow workflows = 3;
}

message DeleteStreamsRequest {
  string runtime_id = 1;
  string version_name = 2;
}

message DeleteObjectStoresRequest {
  string runtime_id = 1;
  string version_name = 2;
}

message CreateStreamsResponse {
  message NodeStreamConfig {
    string subject = 1;
    repeated string subscriptions = 2;
  }

  message WorkflowStreamConfig {
    string stream = 1;
    map<string, NodeStreamConfig> nodes = 2;
    string entrypoint_subject = 3;
  }

  map<string, WorkflowStreamConfig> workflows = 1;
}

message CreateObjectStoresResponse {
  message WorkflowObjectStoreConfig {
    map<string, string> nodes = 1;
  }

  map<string, WorkflowObjectStoreConfig> workflows = 1;
}

message DeleteResponse {
  string message = 1;
}

message CreateKeyValueStoreResponse {
  message WorkflowKeyValueStoreConfig {
    string keyValueStore = 1;
    map<string, string> nodes = 2;
  }

  string keyValueStore = 1;
  map<string, WorkflowKeyValueStoreConfig> workflows = 2;
}

service NatsManagerService {
  rpc CreateStreams (CreateStreamsRequest) returns (CreateStreamsResponse);
  rpc CreateObjectStores (CreateObjectStoresRequest) returns (CreateObjectStoresResponse);
  rpc DeleteStreams (DeleteStreamsRequest) returns (DeleteResponse);
  rpc DeleteObjectStores (DeleteObjectStoresRequest) returns (DeleteResponse);
  rpc CreateKeyValueStores (CreateKeyValueStoresRequest) returns (CreateKeyValueStoreResponse);
};
