// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FiltersBar matches snapshot 1`] = `
<Wrapper
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "GetUsers",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "users",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "email",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "accessLevel",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "creationDate",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "lastActivity",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "activeSessions",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 140,
              "start": 0,
            },
          },
        },
        "result": Object {
          "data": Object {
            "users": Array [
              Object {
                "accessLevel": "ADMIN",
                "activeSessions": 4,
                "creationDate": "2018-01-01",
                "email": "user1@konstellation.com",
                "id": "user1",
                "lastActivity": "2018-01-01",
              },
              Object {
                "accessLevel": "MANAGER",
                "activeSessions": 4,
                "creationDate": "2018-01-01",
                "email": "user2@konstellation.com",
                "id": "user2",
                "lastActivity": "2018-01-01",
              },
            ],
          },
        },
      },
    ]
  }
>
  <MockedProvider
    addTypename={false}
    mocks={
      Array [
        Object {
          "request": Object {
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GetUsers",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "users",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "accessLevel",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "creationDate",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "lastActivity",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "activeSessions",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 140,
                "start": 0,
              },
            },
          },
          "result": Object {
            "data": Object {
              "users": Array [
                Object {
                  "accessLevel": "ADMIN",
                  "activeSessions": 4,
                  "creationDate": "2018-01-01",
                  "email": "user1@konstellation.com",
                  "id": "user1",
                  "lastActivity": "2018-01-01",
                },
                Object {
                  "accessLevel": "MANAGER",
                  "activeSessions": 4,
                  "creationDate": "2018-01-01",
                  "email": "user2@konstellation.com",
                  "id": "user2",
                  "lastActivity": "2018-01-01",
                },
              ],
            },
          },
        },
      ]
    }
  >
    <ApolloProvider
      client={
        ApolloClient {
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "canonizeResults": false,
              "dataIdFromObject": [Function],
              "resultCaching": true,
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "users": Array [
                    Object {
                      "accessLevel": "ADMIN",
                      "activeSessions": 4,
                      "creationDate": "2018-01-01",
                      "email": "user1@konstellation.com",
                      "id": "user1",
                      "lastActivity": "2018-01-01",
                    },
                    Object {
                      "accessLevel": "MANAGER",
                      "activeSessions": 4,
                      "creationDate": "2018-01-01",
                      "email": "user2@konstellation.com",
                      "id": "user2",
                      "lastActivity": "2018-01-01",
                    },
                  ],
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "parent": null,
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": undefined,
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "stump": Stump {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                  "parent": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "parent": null,
                  },
                },
                "id": "EntityStore.Stump",
                "parent": [Circular],
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "replay": [Function],
                "rootIds": Object {},
                "toReference": [Function],
              },
              "toReference": [Function],
            },
            "evict": [Function],
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "modify": [Function],
            "optimisticData": Stump {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
                "parent": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "parent": null,
                },
              },
              "id": "EntityStore.Stump",
              "parent": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "users": Array [
                      Object {
                        "accessLevel": "ADMIN",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user1@konstellation.com",
                        "id": "user1",
                        "lastActivity": "2018-01-01",
                      },
                      Object {
                        "accessLevel": "MANAGER",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user2@konstellation.com",
                        "id": "user2",
                        "lastActivity": "2018-01-01",
                      },
                    ],
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "parent": null,
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "stump": [Circular],
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": undefined,
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "replay": [Function],
              "rootIds": Object {},
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": undefined,
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "reset": [Function],
            "storeReader": StoreReader {
              "canon": ObjectCanon {
                "empty": Object {},
                "keysByJSON": Map {
                  "[]" => Object {
                    "json": "[]",
                    "sorted": Array [],
                  },
                },
                "known": WeakSet {},
                "passes": WeakMap {},
                "pool": Trie {
                  "data": Object {
                    "keys": Object {
                      "json": "[]",
                      "sorted": Array [],
                    },
                  },
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
                "canonizeResults": false,
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "canon": ObjectCanon {
                  "empty": Object {},
                  "keysByJSON": Map {
                    "[]" => Object {
                      "json": "[]",
                      "sorted": Array [],
                    },
                  },
                  "known": WeakSet {},
                  "passes": WeakMap {},
                  "pool": Trie {
                    "data": Object {
                      "keys": Object {
                        "json": "[]",
                        "sorted": Array [],
                      },
                    },
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                  "canonizeResults": false,
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watches": Set {
              Object {
                "callback": [Function],
                "canonizeResults": undefined,
                "lastDiff": Object {
                  "complete": true,
                  "missing": undefined,
                  "result": Object {
                    "users": Array [
                      Object {
                        "accessLevel": "ADMIN",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user1@konstellation.com",
                        "id": "user1",
                        "lastActivity": "2018-01-01",
                      },
                      Object {
                        "accessLevel": "MANAGER",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user2@konstellation.com",
                        "id": "user2",
                        "lastActivity": "2018-01-01",
                      },
                    ],
                  },
                },
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GetUsers",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "users",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "accessLevel",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "creationDate",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "lastActivity",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "activeSessions",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 140,
                    "start": 0,
                  },
                },
                "returnPartialData": true,
                "variables": Object {},
                "watcher": QueryInfo {
                  "cache": [Circular],
                  "cancel": [Function],
                  "dirty": false,
                  "document": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GetUsers",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "users",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "accessLevel",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "creationDate",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "lastActivity",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "activeSessions",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 140,
                      "start": 0,
                    },
                  },
                  "graphQLErrors": Array [],
                  "lastDiff": Object {
                    "diff": Object {
                      "complete": true,
                      "missing": undefined,
                      "result": Object {
                        "users": Array [
                          Object {
                            "accessLevel": "ADMIN",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user1@konstellation.com",
                            "id": "user1",
                            "lastActivity": "2018-01-01",
                          },
                          Object {
                            "accessLevel": "MANAGER",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user2@konstellation.com",
                            "id": "user2",
                            "lastActivity": "2018-01-01",
                          },
                        ],
                      },
                    },
                    "options": Object {
                      "canonizeResults": undefined,
                      "optimistic": true,
                      "query": Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "GetUsers",
                            },
                            "operation": "query",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "users",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "email",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "accessLevel",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "creationDate",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "lastActivity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "activeSessions",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 140,
                          "start": 0,
                        },
                      },
                      "returnPartialData": true,
                      "variables": Object {},
                    },
                  },
                  "lastRequestId": 1,
                  "lastWatch": [Circular],
                  "lastWrite": Object {
                    "dmCount": 0,
                    "result": Object {
                      "data": Object {
                        "users": Array [
                          Object {
                            "accessLevel": "ADMIN",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user1@konstellation.com",
                            "id": "user1",
                            "lastActivity": "2018-01-01",
                          },
                          Object {
                            "accessLevel": "MANAGER",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user2@konstellation.com",
                            "id": "user2",
                            "lastActivity": "2018-01-01",
                          },
                        ],
                      },
                    },
                    "variables": Object {},
                  },
                  "listeners": Set {
                    [Function],
                  },
                  "networkError": null,
                  "networkStatus": 7,
                  "observableQuery": ObservableQuery {
                    "_subscriber": [Function],
                    "concast": Concast {
                      "_subscriber": [Function],
                      "addCount": 1,
                      "cancel": [Function],
                      "handlers": Object {
                        "complete": [Function],
                        "error": [Function],
                        "next": [Function],
                      },
                      "latest": Array [
                        "next",
                        Object {
                          "data": Object {
                            "users": Array [
                              Object {
                                "accessLevel": "ADMIN",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user1@konstellation.com",
                                "id": "user1",
                                "lastActivity": "2018-01-01",
                              },
                              Object {
                                "accessLevel": "MANAGER",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user2@konstellation.com",
                                "id": "user2",
                                "lastActivity": "2018-01-01",
                              },
                            ],
                          },
                          "loading": false,
                          "networkStatus": 7,
                        },
                      ],
                      "observers": Set {
                        Object {
                          "error": [Function],
                          "next": [Function],
                        },
                      },
                      "promise": Promise {},
                      "reject": [Function],
                      "resolve": [Function],
                      "sources": Array [],
                      "sub": null,
                    },
                    "initialFetchPolicy": "cache-first",
                    "isTornDown": false,
                    "last": Object {
                      "result": Object {
                        "data": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                        "loading": false,
                        "networkStatus": 7,
                      },
                      "variables": Object {},
                    },
                    "observer": Object {
                      "error": [Function],
                      "next": [Function],
                    },
                    "observers": Set {
                      SubscriptionObserver {
                        "_subscription": Subscription {
                          "_cleanup": [Function],
                          "_observer": Object {
                            "complete": undefined,
                            "error": [Function],
                            "next": [Function],
                          },
                          "_queue": undefined,
                          "_state": "ready",
                        },
                      },
                    },
                    "options": Object {
                      "fetchPolicy": "cache-first",
                      "notifyOnNetworkStatusChange": false,
                      "query": Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "GetUsers",
                            },
                            "operation": "query",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "users",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "email",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "accessLevel",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "creationDate",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "lastActivity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "activeSessions",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 140,
                          "start": 0,
                        },
                      },
                      "variables": Object {},
                    },
                    "queryId": "1",
                    "queryInfo": [Circular],
                    "queryManager": QueryManager {
                      "assumeImmutableResults": false,
                      "cache": [Circular],
                      "clientAwareness": Object {
                        "name": undefined,
                        "version": undefined,
                      },
                      "fetchCancelFns": Map {},
                      "inFlightLinkObservables": Map {},
                      "link": MockLink {
                        "addTypename": false,
                        "mockedResponsesByKey": Object {
                          "{\\"query\\":\\"query GetUsers {\\\\n  users {\\\\n    id\\\\n    email\\\\n    accessLevel\\\\n    creationDate\\\\n    lastActivity\\\\n    activeSessions\\\\n  }\\\\n}\\\\n\\"}": Array [],
                        },
                        "operation": Object {
                          "extensions": Object {},
                          "operationName": "GetUsers",
                          "query": Object {
                            "definitions": Array [
                              Object {
                                "directives": Array [],
                                "kind": "OperationDefinition",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "GetUsers",
                                },
                                "operation": "query",
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "users",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "email",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "accessLevel",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "creationDate",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "lastActivity",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "activeSessions",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "variableDefinitions": Array [],
                              },
                            ],
                            "kind": "Document",
                            "loc": Object {
                              "end": 140,
                              "start": 0,
                            },
                          },
                          "variables": Object {},
                        },
                      },
                      "localState": LocalState {
                        "cache": [Circular],
                        "client": [Circular],
                      },
                      "mutationIdCounter": 1,
                      "mutationStore": Object {},
                      "onBroadcast": [Function],
                      "queries": Map {
                        "1" => [Circular],
                      },
                      "queryDeduplication": true,
                      "queryIdCounter": 2,
                      "requestIdCounter": 2,
                      "ssrMode": false,
                      "transformCache": WeakMap {},
                    },
                    "queryName": "GetUsers",
                    "subscriptions": Set {},
                  },
                  "oqListener": [Function],
                  "queryId": "1",
                  "stopped": false,
                  "subscriptions": Set {},
                  "variables": Object {},
                },
              },
            },
          },
          "clearStoreCallbacks": Array [],
          "defaultOptions": Object {},
          "disableNetworkFetches": false,
          "link": MockLink {
            "addTypename": false,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"query GetUsers {\\\\n  users {\\\\n    id\\\\n    email\\\\n    accessLevel\\\\n    creationDate\\\\n    lastActivity\\\\n    activeSessions\\\\n  }\\\\n}\\\\n\\"}": Array [],
            },
            "operation": Object {
              "extensions": Object {},
              "operationName": "GetUsers",
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GetUsers",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "users",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "email",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "accessLevel",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "creationDate",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "lastActivity",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "activeSessions",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 140,
                  "start": 0,
                },
              },
              "variables": Object {},
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "canonizeResults": false,
                "dataIdFromObject": [Function],
                "resultCaching": true,
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "users": Array [
                      Object {
                        "accessLevel": "ADMIN",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user1@konstellation.com",
                        "id": "user1",
                        "lastActivity": "2018-01-01",
                      },
                      Object {
                        "accessLevel": "MANAGER",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user2@konstellation.com",
                        "id": "user2",
                        "lastActivity": "2018-01-01",
                      },
                    ],
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "parent": null,
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "stump": Stump {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                    "parent": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weakness": true,
                      },
                      "parent": null,
                    },
                  },
                  "id": "EntityStore.Stump",
                  "parent": [Circular],
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "replay": [Function],
                  "rootIds": Object {},
                  "toReference": [Function],
                },
                "toReference": [Function],
              },
              "evict": [Function],
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "modify": [Function],
              "optimisticData": Stump {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                  "parent": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "parent": null,
                  },
                },
                "id": "EntityStore.Stump",
                "parent": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "parent": null,
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "stump": [Circular],
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "replay": [Function],
                "rootIds": Object {},
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": undefined,
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "reset": [Function],
              "storeReader": StoreReader {
                "canon": ObjectCanon {
                  "empty": Object {},
                  "keysByJSON": Map {
                    "[]" => Object {
                      "json": "[]",
                      "sorted": Array [],
                    },
                  },
                  "known": WeakSet {},
                  "passes": WeakMap {},
                  "pool": Trie {
                    "data": Object {
                      "keys": Object {
                        "json": "[]",
                        "sorted": Array [],
                      },
                    },
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                  "canonizeResults": false,
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "canon": ObjectCanon {
                    "empty": Object {},
                    "keysByJSON": Map {
                      "[]" => Object {
                        "json": "[]",
                        "sorted": Array [],
                      },
                    },
                    "known": WeakSet {},
                    "passes": WeakMap {},
                    "pool": Trie {
                      "data": Object {
                        "keys": Object {
                          "json": "[]",
                          "sorted": Array [],
                        },
                      },
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                    "canonizeResults": false,
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watches": Set {
                Object {
                  "callback": [Function],
                  "canonizeResults": undefined,
                  "lastDiff": Object {
                    "complete": true,
                    "missing": undefined,
                    "result": Object {
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "optimistic": true,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GetUsers",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "users",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "accessLevel",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "creationDate",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "lastActivity",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "activeSessions",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 140,
                      "start": 0,
                    },
                  },
                  "returnPartialData": true,
                  "variables": Object {},
                  "watcher": QueryInfo {
                    "cache": [Circular],
                    "cancel": [Function],
                    "dirty": false,
                    "document": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetUsers",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "users",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "accessLevel",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "creationDate",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "lastActivity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "activeSessions",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 140,
                        "start": 0,
                      },
                    },
                    "graphQLErrors": Array [],
                    "lastDiff": Object {
                      "diff": Object {
                        "complete": true,
                        "missing": undefined,
                        "result": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                      },
                      "options": Object {
                        "canonizeResults": undefined,
                        "optimistic": true,
                        "query": Object {
                          "definitions": Array [
                            Object {
                              "directives": Array [],
                              "kind": "OperationDefinition",
                              "name": Object {
                                "kind": "Name",
                                "value": "GetUsers",
                              },
                              "operation": "query",
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "users",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "email",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "accessLevel",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "creationDate",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "lastActivity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "activeSessions",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              "variableDefinitions": Array [],
                            },
                          ],
                          "kind": "Document",
                          "loc": Object {
                            "end": 140,
                            "start": 0,
                          },
                        },
                        "returnPartialData": true,
                        "variables": Object {},
                      },
                    },
                    "lastRequestId": 1,
                    "lastWatch": [Circular],
                    "lastWrite": Object {
                      "dmCount": 0,
                      "result": Object {
                        "data": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                      },
                      "variables": Object {},
                    },
                    "listeners": Set {
                      [Function],
                    },
                    "networkError": null,
                    "networkStatus": 7,
                    "observableQuery": ObservableQuery {
                      "_subscriber": [Function],
                      "concast": Concast {
                        "_subscriber": [Function],
                        "addCount": 1,
                        "cancel": [Function],
                        "handlers": Object {
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "latest": Array [
                          "next",
                          Object {
                            "data": Object {
                              "users": Array [
                                Object {
                                  "accessLevel": "ADMIN",
                                  "activeSessions": 4,
                                  "creationDate": "2018-01-01",
                                  "email": "user1@konstellation.com",
                                  "id": "user1",
                                  "lastActivity": "2018-01-01",
                                },
                                Object {
                                  "accessLevel": "MANAGER",
                                  "activeSessions": 4,
                                  "creationDate": "2018-01-01",
                                  "email": "user2@konstellation.com",
                                  "id": "user2",
                                  "lastActivity": "2018-01-01",
                                },
                              ],
                            },
                            "loading": false,
                            "networkStatus": 7,
                          },
                        ],
                        "observers": Set {
                          Object {
                            "error": [Function],
                            "next": [Function],
                          },
                        },
                        "promise": Promise {},
                        "reject": [Function],
                        "resolve": [Function],
                        "sources": Array [],
                        "sub": null,
                      },
                      "initialFetchPolicy": "cache-first",
                      "isTornDown": false,
                      "last": Object {
                        "result": Object {
                          "data": Object {
                            "users": Array [
                              Object {
                                "accessLevel": "ADMIN",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user1@konstellation.com",
                                "id": "user1",
                                "lastActivity": "2018-01-01",
                              },
                              Object {
                                "accessLevel": "MANAGER",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user2@konstellation.com",
                                "id": "user2",
                                "lastActivity": "2018-01-01",
                              },
                            ],
                          },
                          "loading": false,
                          "networkStatus": 7,
                        },
                        "variables": Object {},
                      },
                      "observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "observers": Set {
                        SubscriptionObserver {
                          "_subscription": Subscription {
                            "_cleanup": [Function],
                            "_observer": Object {
                              "complete": undefined,
                              "error": [Function],
                              "next": [Function],
                            },
                            "_queue": undefined,
                            "_state": "ready",
                          },
                        },
                      },
                      "options": Object {
                        "fetchPolicy": "cache-first",
                        "notifyOnNetworkStatusChange": false,
                        "query": Object {
                          "definitions": Array [
                            Object {
                              "directives": Array [],
                              "kind": "OperationDefinition",
                              "name": Object {
                                "kind": "Name",
                                "value": "GetUsers",
                              },
                              "operation": "query",
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "users",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "email",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "accessLevel",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "creationDate",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "lastActivity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "activeSessions",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              "variableDefinitions": Array [],
                            },
                          ],
                          "kind": "Document",
                          "loc": Object {
                            "end": 140,
                            "start": 0,
                          },
                        },
                        "variables": Object {},
                      },
                      "queryId": "1",
                      "queryInfo": [Circular],
                      "queryManager": QueryManager {
                        "assumeImmutableResults": false,
                        "cache": [Circular],
                        "clientAwareness": Object {
                          "name": undefined,
                          "version": undefined,
                        },
                        "fetchCancelFns": Map {},
                        "inFlightLinkObservables": Map {},
                        "link": MockLink {
                          "addTypename": false,
                          "mockedResponsesByKey": Object {
                            "{\\"query\\":\\"query GetUsers {\\\\n  users {\\\\n    id\\\\n    email\\\\n    accessLevel\\\\n    creationDate\\\\n    lastActivity\\\\n    activeSessions\\\\n  }\\\\n}\\\\n\\"}": Array [],
                          },
                          "operation": Object {
                            "extensions": Object {},
                            "operationName": "GetUsers",
                            "query": Object {
                              "definitions": Array [
                                Object {
                                  "directives": Array [],
                                  "kind": "OperationDefinition",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "GetUsers",
                                  },
                                  "operation": "query",
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "users",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "email",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "accessLevel",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "creationDate",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "lastActivity",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "activeSessions",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "variableDefinitions": Array [],
                                },
                              ],
                              "kind": "Document",
                              "loc": Object {
                                "end": 140,
                                "start": 0,
                              },
                            },
                            "variables": Object {},
                          },
                        },
                        "localState": [Circular],
                        "mutationIdCounter": 1,
                        "mutationStore": Object {},
                        "onBroadcast": [Function],
                        "queries": Map {
                          "1" => [Circular],
                        },
                        "queryDeduplication": true,
                        "queryIdCounter": 2,
                        "requestIdCounter": 2,
                        "ssrMode": false,
                        "transformCache": WeakMap {},
                      },
                      "queryName": "GetUsers",
                      "subscriptions": Set {},
                    },
                    "oqListener": [Function],
                    "queryId": "1",
                    "stopped": false,
                    "subscriptions": Set {},
                    "variables": Object {},
                  },
                },
              },
            },
            "client": [Circular],
          },
          "mutate": [Function],
          "query": [Function],
          "queryDeduplication": true,
          "queryManager": QueryManager {
            "assumeImmutableResults": false,
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "canonizeResults": false,
                "dataIdFromObject": [Function],
                "resultCaching": true,
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "users": Array [
                      Object {
                        "accessLevel": "ADMIN",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user1@konstellation.com",
                        "id": "user1",
                        "lastActivity": "2018-01-01",
                      },
                      Object {
                        "accessLevel": "MANAGER",
                        "activeSessions": 4,
                        "creationDate": "2018-01-01",
                        "email": "user2@konstellation.com",
                        "id": "user2",
                        "lastActivity": "2018-01-01",
                      },
                    ],
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "parent": null,
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "stump": Stump {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                    "parent": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weakness": true,
                      },
                      "parent": null,
                    },
                  },
                  "id": "EntityStore.Stump",
                  "parent": [Circular],
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "replay": [Function],
                  "rootIds": Object {},
                  "toReference": [Function],
                },
                "toReference": [Function],
              },
              "evict": [Function],
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "modify": [Function],
              "optimisticData": Stump {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                  "parent": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "parent": null,
                  },
                },
                "id": "EntityStore.Stump",
                "parent": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "parent": null,
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "stump": [Circular],
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "replay": [Function],
                "rootIds": Object {},
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": undefined,
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "reset": [Function],
              "storeReader": StoreReader {
                "canon": ObjectCanon {
                  "empty": Object {},
                  "keysByJSON": Map {
                    "[]" => Object {
                      "json": "[]",
                      "sorted": Array [],
                    },
                  },
                  "known": WeakSet {},
                  "passes": WeakMap {},
                  "pool": Trie {
                    "data": Object {
                      "keys": Object {
                        "json": "[]",
                        "sorted": Array [],
                      },
                    },
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                  "canonizeResults": false,
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "canon": ObjectCanon {
                    "empty": Object {},
                    "keysByJSON": Map {
                      "[]" => Object {
                        "json": "[]",
                        "sorted": Array [],
                      },
                    },
                    "known": WeakSet {},
                    "passes": WeakMap {},
                    "pool": Trie {
                      "data": Object {
                        "keys": Object {
                          "json": "[]",
                          "sorted": Array [],
                        },
                      },
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                    "canonizeResults": false,
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watches": Set {
                Object {
                  "callback": [Function],
                  "canonizeResults": undefined,
                  "lastDiff": Object {
                    "complete": true,
                    "missing": undefined,
                    "result": Object {
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "optimistic": true,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GetUsers",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "users",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "accessLevel",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "creationDate",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "lastActivity",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "activeSessions",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 140,
                      "start": 0,
                    },
                  },
                  "returnPartialData": true,
                  "variables": Object {},
                  "watcher": QueryInfo {
                    "cache": [Circular],
                    "cancel": [Function],
                    "dirty": false,
                    "document": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetUsers",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "users",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "accessLevel",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "creationDate",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "lastActivity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "activeSessions",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 140,
                        "start": 0,
                      },
                    },
                    "graphQLErrors": Array [],
                    "lastDiff": Object {
                      "diff": Object {
                        "complete": true,
                        "missing": undefined,
                        "result": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                      },
                      "options": Object {
                        "canonizeResults": undefined,
                        "optimistic": true,
                        "query": Object {
                          "definitions": Array [
                            Object {
                              "directives": Array [],
                              "kind": "OperationDefinition",
                              "name": Object {
                                "kind": "Name",
                                "value": "GetUsers",
                              },
                              "operation": "query",
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "users",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "email",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "accessLevel",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "creationDate",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "lastActivity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "activeSessions",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              "variableDefinitions": Array [],
                            },
                          ],
                          "kind": "Document",
                          "loc": Object {
                            "end": 140,
                            "start": 0,
                          },
                        },
                        "returnPartialData": true,
                        "variables": Object {},
                      },
                    },
                    "lastRequestId": 1,
                    "lastWatch": [Circular],
                    "lastWrite": Object {
                      "dmCount": 0,
                      "result": Object {
                        "data": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                      },
                      "variables": Object {},
                    },
                    "listeners": Set {
                      [Function],
                    },
                    "networkError": null,
                    "networkStatus": 7,
                    "observableQuery": ObservableQuery {
                      "_subscriber": [Function],
                      "concast": Concast {
                        "_subscriber": [Function],
                        "addCount": 1,
                        "cancel": [Function],
                        "handlers": Object {
                          "complete": [Function],
                          "error": [Function],
                          "next": [Function],
                        },
                        "latest": Array [
                          "next",
                          Object {
                            "data": Object {
                              "users": Array [
                                Object {
                                  "accessLevel": "ADMIN",
                                  "activeSessions": 4,
                                  "creationDate": "2018-01-01",
                                  "email": "user1@konstellation.com",
                                  "id": "user1",
                                  "lastActivity": "2018-01-01",
                                },
                                Object {
                                  "accessLevel": "MANAGER",
                                  "activeSessions": 4,
                                  "creationDate": "2018-01-01",
                                  "email": "user2@konstellation.com",
                                  "id": "user2",
                                  "lastActivity": "2018-01-01",
                                },
                              ],
                            },
                            "loading": false,
                            "networkStatus": 7,
                          },
                        ],
                        "observers": Set {
                          Object {
                            "error": [Function],
                            "next": [Function],
                          },
                        },
                        "promise": Promise {},
                        "reject": [Function],
                        "resolve": [Function],
                        "sources": Array [],
                        "sub": null,
                      },
                      "initialFetchPolicy": "cache-first",
                      "isTornDown": false,
                      "last": Object {
                        "result": Object {
                          "data": Object {
                            "users": Array [
                              Object {
                                "accessLevel": "ADMIN",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user1@konstellation.com",
                                "id": "user1",
                                "lastActivity": "2018-01-01",
                              },
                              Object {
                                "accessLevel": "MANAGER",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user2@konstellation.com",
                                "id": "user2",
                                "lastActivity": "2018-01-01",
                              },
                            ],
                          },
                          "loading": false,
                          "networkStatus": 7,
                        },
                        "variables": Object {},
                      },
                      "observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "observers": Set {
                        SubscriptionObserver {
                          "_subscription": Subscription {
                            "_cleanup": [Function],
                            "_observer": Object {
                              "complete": undefined,
                              "error": [Function],
                              "next": [Function],
                            },
                            "_queue": undefined,
                            "_state": "ready",
                          },
                        },
                      },
                      "options": Object {
                        "fetchPolicy": "cache-first",
                        "notifyOnNetworkStatusChange": false,
                        "query": Object {
                          "definitions": Array [
                            Object {
                              "directives": Array [],
                              "kind": "OperationDefinition",
                              "name": Object {
                                "kind": "Name",
                                "value": "GetUsers",
                              },
                              "operation": "query",
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "users",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "email",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "accessLevel",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "creationDate",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "lastActivity",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "activeSessions",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              "variableDefinitions": Array [],
                            },
                          ],
                          "kind": "Document",
                          "loc": Object {
                            "end": 140,
                            "start": 0,
                          },
                        },
                        "variables": Object {},
                      },
                      "queryId": "1",
                      "queryInfo": [Circular],
                      "queryManager": [Circular],
                      "queryName": "GetUsers",
                      "subscriptions": Set {},
                    },
                    "oqListener": [Function],
                    "queryId": "1",
                    "stopped": false,
                    "subscriptions": Set {},
                    "variables": Object {},
                  },
                },
              },
            },
            "clientAwareness": Object {
              "name": undefined,
              "version": undefined,
            },
            "fetchCancelFns": Map {},
            "inFlightLinkObservables": Map {},
            "link": MockLink {
              "addTypename": false,
              "mockedResponsesByKey": Object {
                "{\\"query\\":\\"query GetUsers {\\\\n  users {\\\\n    id\\\\n    email\\\\n    accessLevel\\\\n    creationDate\\\\n    lastActivity\\\\n    activeSessions\\\\n  }\\\\n}\\\\n\\"}": Array [],
              },
              "operation": Object {
                "extensions": Object {},
                "operationName": "GetUsers",
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GetUsers",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "users",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "accessLevel",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "creationDate",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "lastActivity",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "activeSessions",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 140,
                    "start": 0,
                  },
                },
                "variables": Object {},
              },
            },
            "localState": LocalState {
              "cache": InMemoryCache {
                "addTypename": false,
                "config": Object {
                  "addTypename": false,
                  "canonizeResults": false,
                  "dataIdFromObject": [Function],
                  "resultCaching": true,
                },
                "data": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "parent": null,
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "stump": Stump {
                    "canRead": [Function],
                    "data": Object {},
                    "getFieldValue": [Function],
                    "group": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weak": WeakMap {},
                        "weakness": true,
                      },
                      "parent": CacheGroup {
                        "caching": true,
                        "d": [Function],
                        "keyMaker": Trie {
                          "makeData": [Function],
                          "weakness": true,
                        },
                        "parent": null,
                      },
                    },
                    "id": "EntityStore.Stump",
                    "parent": [Circular],
                    "policies": Policies {
                      "cache": [Circular],
                      "config": Object {
                        "cache": [Circular],
                        "dataIdFromObject": [Function],
                        "possibleTypes": undefined,
                        "typePolicies": undefined,
                      },
                      "fuzzySubtypes": Map {},
                      "rootIdsByTypename": Object {
                        "Mutation": "ROOT_MUTATION",
                        "Query": "ROOT_QUERY",
                        "Subscription": "ROOT_SUBSCRIPTION",
                      },
                      "rootTypenamesById": Object {
                        "ROOT_MUTATION": "Mutation",
                        "ROOT_QUERY": "Query",
                        "ROOT_SUBSCRIPTION": "Subscription",
                      },
                      "supertypeMap": Map {},
                      "toBeAdded": Object {},
                      "typePolicies": Object {
                        "Query": Object {
                          "fields": Object {},
                        },
                      },
                      "usingPossibleTypes": false,
                    },
                    "refs": Object {},
                    "replay": [Function],
                    "rootIds": Object {},
                    "toReference": [Function],
                  },
                  "toReference": [Function],
                },
                "evict": [Function],
                "getFragmentDoc": [Function],
                "makeVar": [Function],
                "maybeBroadcastWatch": [Function],
                "modify": [Function],
                "optimisticData": Stump {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                    "parent": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weakness": true,
                      },
                      "parent": null,
                    },
                  },
                  "id": "EntityStore.Stump",
                  "parent": Root {
                    "canRead": [Function],
                    "data": Object {
                      "ROOT_QUERY": Object {
                        "__typename": "Query",
                        "users": Array [
                          Object {
                            "accessLevel": "ADMIN",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user1@konstellation.com",
                            "id": "user1",
                            "lastActivity": "2018-01-01",
                          },
                          Object {
                            "accessLevel": "MANAGER",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user2@konstellation.com",
                            "id": "user2",
                            "lastActivity": "2018-01-01",
                          },
                        ],
                      },
                    },
                    "getFieldValue": [Function],
                    "group": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weakness": true,
                      },
                      "parent": null,
                    },
                    "policies": Policies {
                      "cache": [Circular],
                      "config": Object {
                        "cache": [Circular],
                        "dataIdFromObject": [Function],
                        "possibleTypes": undefined,
                        "typePolicies": undefined,
                      },
                      "fuzzySubtypes": Map {},
                      "rootIdsByTypename": Object {
                        "Mutation": "ROOT_MUTATION",
                        "Query": "ROOT_QUERY",
                        "Subscription": "ROOT_SUBSCRIPTION",
                      },
                      "rootTypenamesById": Object {
                        "ROOT_MUTATION": "Mutation",
                        "ROOT_QUERY": "Query",
                        "ROOT_SUBSCRIPTION": "Subscription",
                      },
                      "supertypeMap": Map {},
                      "toBeAdded": Object {},
                      "typePolicies": Object {
                        "Query": Object {
                          "fields": Object {},
                        },
                      },
                      "usingPossibleTypes": false,
                    },
                    "refs": Object {},
                    "rootIds": Object {
                      "ROOT_QUERY": 1,
                    },
                    "storageTrie": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "stump": [Circular],
                    "toReference": [Function],
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "replay": [Function],
                  "rootIds": Object {},
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": undefined,
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "reset": [Function],
                "storeReader": StoreReader {
                  "canon": ObjectCanon {
                    "empty": Object {},
                    "keysByJSON": Map {
                      "[]" => Object {
                        "json": "[]",
                        "sorted": Array [],
                      },
                    },
                    "known": WeakSet {},
                    "passes": WeakMap {},
                    "pool": Trie {
                      "data": Object {
                        "keys": Object {
                          "json": "[]",
                          "sorted": Array [],
                        },
                      },
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                    "canonizeResults": false,
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
                "storeWriter": StoreWriter {
                  "cache": [Circular],
                  "reader": StoreReader {
                    "canon": ObjectCanon {
                      "empty": Object {},
                      "keysByJSON": Map {
                        "[]" => Object {
                          "json": "[]",
                          "sorted": Array [],
                        },
                      },
                      "known": WeakSet {},
                      "passes": WeakMap {},
                      "pool": Trie {
                        "data": Object {
                          "keys": Object {
                            "json": "[]",
                            "sorted": Array [],
                          },
                        },
                        "makeData": [Function],
                        "weak": WeakMap {},
                        "weakness": true,
                      },
                    },
                    "config": Object {
                      "addTypename": false,
                      "cache": [Circular],
                      "canonizeResults": false,
                    },
                    "executeSelectionSet": [Function],
                    "executeSubSelectedArray": [Function],
                    "knownResults": WeakMap {},
                  },
                },
                "txCount": 0,
                "typenameDocumentCache": Map {},
                "watches": Set {
                  Object {
                    "callback": [Function],
                    "canonizeResults": undefined,
                    "lastDiff": Object {
                      "complete": true,
                      "missing": undefined,
                      "result": Object {
                        "users": Array [
                          Object {
                            "accessLevel": "ADMIN",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user1@konstellation.com",
                            "id": "user1",
                            "lastActivity": "2018-01-01",
                          },
                          Object {
                            "accessLevel": "MANAGER",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user2@konstellation.com",
                            "id": "user2",
                            "lastActivity": "2018-01-01",
                          },
                        ],
                      },
                    },
                    "optimistic": true,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetUsers",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "users",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "accessLevel",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "creationDate",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "lastActivity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "activeSessions",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 140,
                        "start": 0,
                      },
                    },
                    "returnPartialData": true,
                    "variables": Object {},
                    "watcher": QueryInfo {
                      "cache": [Circular],
                      "cancel": [Function],
                      "dirty": false,
                      "document": Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "GetUsers",
                            },
                            "operation": "query",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "users",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "email",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "accessLevel",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "creationDate",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "lastActivity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "activeSessions",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 140,
                          "start": 0,
                        },
                      },
                      "graphQLErrors": Array [],
                      "lastDiff": Object {
                        "diff": Object {
                          "complete": true,
                          "missing": undefined,
                          "result": Object {
                            "users": Array [
                              Object {
                                "accessLevel": "ADMIN",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user1@konstellation.com",
                                "id": "user1",
                                "lastActivity": "2018-01-01",
                              },
                              Object {
                                "accessLevel": "MANAGER",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user2@konstellation.com",
                                "id": "user2",
                                "lastActivity": "2018-01-01",
                              },
                            ],
                          },
                        },
                        "options": Object {
                          "canonizeResults": undefined,
                          "optimistic": true,
                          "query": Object {
                            "definitions": Array [
                              Object {
                                "directives": Array [],
                                "kind": "OperationDefinition",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "GetUsers",
                                },
                                "operation": "query",
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "users",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "email",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "accessLevel",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "creationDate",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "lastActivity",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "activeSessions",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "variableDefinitions": Array [],
                              },
                            ],
                            "kind": "Document",
                            "loc": Object {
                              "end": 140,
                              "start": 0,
                            },
                          },
                          "returnPartialData": true,
                          "variables": Object {},
                        },
                      },
                      "lastRequestId": 1,
                      "lastWatch": [Circular],
                      "lastWrite": Object {
                        "dmCount": 0,
                        "result": Object {
                          "data": Object {
                            "users": Array [
                              Object {
                                "accessLevel": "ADMIN",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user1@konstellation.com",
                                "id": "user1",
                                "lastActivity": "2018-01-01",
                              },
                              Object {
                                "accessLevel": "MANAGER",
                                "activeSessions": 4,
                                "creationDate": "2018-01-01",
                                "email": "user2@konstellation.com",
                                "id": "user2",
                                "lastActivity": "2018-01-01",
                              },
                            ],
                          },
                        },
                        "variables": Object {},
                      },
                      "listeners": Set {
                        [Function],
                      },
                      "networkError": null,
                      "networkStatus": 7,
                      "observableQuery": ObservableQuery {
                        "_subscriber": [Function],
                        "concast": Concast {
                          "_subscriber": [Function],
                          "addCount": 1,
                          "cancel": [Function],
                          "handlers": Object {
                            "complete": [Function],
                            "error": [Function],
                            "next": [Function],
                          },
                          "latest": Array [
                            "next",
                            Object {
                              "data": Object {
                                "users": Array [
                                  Object {
                                    "accessLevel": "ADMIN",
                                    "activeSessions": 4,
                                    "creationDate": "2018-01-01",
                                    "email": "user1@konstellation.com",
                                    "id": "user1",
                                    "lastActivity": "2018-01-01",
                                  },
                                  Object {
                                    "accessLevel": "MANAGER",
                                    "activeSessions": 4,
                                    "creationDate": "2018-01-01",
                                    "email": "user2@konstellation.com",
                                    "id": "user2",
                                    "lastActivity": "2018-01-01",
                                  },
                                ],
                              },
                              "loading": false,
                              "networkStatus": 7,
                            },
                          ],
                          "observers": Set {
                            Object {
                              "error": [Function],
                              "next": [Function],
                            },
                          },
                          "promise": Promise {},
                          "reject": [Function],
                          "resolve": [Function],
                          "sources": Array [],
                          "sub": null,
                        },
                        "initialFetchPolicy": "cache-first",
                        "isTornDown": false,
                        "last": Object {
                          "result": Object {
                            "data": Object {
                              "users": Array [
                                Object {
                                  "accessLevel": "ADMIN",
                                  "activeSessions": 4,
                                  "creationDate": "2018-01-01",
                                  "email": "user1@konstellation.com",
                                  "id": "user1",
                                  "lastActivity": "2018-01-01",
                                },
                                Object {
                                  "accessLevel": "MANAGER",
                                  "activeSessions": 4,
                                  "creationDate": "2018-01-01",
                                  "email": "user2@konstellation.com",
                                  "id": "user2",
                                  "lastActivity": "2018-01-01",
                                },
                              ],
                            },
                            "loading": false,
                            "networkStatus": 7,
                          },
                          "variables": Object {},
                        },
                        "observer": Object {
                          "error": [Function],
                          "next": [Function],
                        },
                        "observers": Set {
                          SubscriptionObserver {
                            "_subscription": Subscription {
                              "_cleanup": [Function],
                              "_observer": Object {
                                "complete": undefined,
                                "error": [Function],
                                "next": [Function],
                              },
                              "_queue": undefined,
                              "_state": "ready",
                            },
                          },
                        },
                        "options": Object {
                          "fetchPolicy": "cache-first",
                          "notifyOnNetworkStatusChange": false,
                          "query": Object {
                            "definitions": Array [
                              Object {
                                "directives": Array [],
                                "kind": "OperationDefinition",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "GetUsers",
                                },
                                "operation": "query",
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "users",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "email",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "accessLevel",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "creationDate",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "lastActivity",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "activeSessions",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "variableDefinitions": Array [],
                              },
                            ],
                            "kind": "Document",
                            "loc": Object {
                              "end": 140,
                              "start": 0,
                            },
                          },
                          "variables": Object {},
                        },
                        "queryId": "1",
                        "queryInfo": [Circular],
                        "queryManager": [Circular],
                        "queryName": "GetUsers",
                        "subscriptions": Set {},
                      },
                      "oqListener": [Function],
                      "queryId": "1",
                      "stopped": false,
                      "subscriptions": Set {},
                      "variables": Object {},
                    },
                  },
                },
              },
              "client": [Circular],
            },
            "mutationIdCounter": 1,
            "mutationStore": Object {},
            "onBroadcast": [Function],
            "queries": Map {
              "1" => QueryInfo {
                "cache": InMemoryCache {
                  "addTypename": false,
                  "config": Object {
                    "addTypename": false,
                    "canonizeResults": false,
                    "dataIdFromObject": [Function],
                    "resultCaching": true,
                  },
                  "data": Root {
                    "canRead": [Function],
                    "data": Object {
                      "ROOT_QUERY": Object {
                        "__typename": "Query",
                        "users": Array [
                          Object {
                            "accessLevel": "ADMIN",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user1@konstellation.com",
                            "id": "user1",
                            "lastActivity": "2018-01-01",
                          },
                          Object {
                            "accessLevel": "MANAGER",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user2@konstellation.com",
                            "id": "user2",
                            "lastActivity": "2018-01-01",
                          },
                        ],
                      },
                    },
                    "getFieldValue": [Function],
                    "group": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weakness": true,
                      },
                      "parent": null,
                    },
                    "policies": Policies {
                      "cache": [Circular],
                      "config": Object {
                        "cache": [Circular],
                        "dataIdFromObject": [Function],
                        "possibleTypes": undefined,
                        "typePolicies": undefined,
                      },
                      "fuzzySubtypes": Map {},
                      "rootIdsByTypename": Object {
                        "Mutation": "ROOT_MUTATION",
                        "Query": "ROOT_QUERY",
                        "Subscription": "ROOT_SUBSCRIPTION",
                      },
                      "rootTypenamesById": Object {
                        "ROOT_MUTATION": "Mutation",
                        "ROOT_QUERY": "Query",
                        "ROOT_SUBSCRIPTION": "Subscription",
                      },
                      "supertypeMap": Map {},
                      "toBeAdded": Object {},
                      "typePolicies": Object {
                        "Query": Object {
                          "fields": Object {},
                        },
                      },
                      "usingPossibleTypes": false,
                    },
                    "refs": Object {},
                    "rootIds": Object {
                      "ROOT_QUERY": 1,
                    },
                    "storageTrie": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                    "stump": Stump {
                      "canRead": [Function],
                      "data": Object {},
                      "getFieldValue": [Function],
                      "group": CacheGroup {
                        "caching": true,
                        "d": [Function],
                        "keyMaker": Trie {
                          "makeData": [Function],
                          "weak": WeakMap {},
                          "weakness": true,
                        },
                        "parent": CacheGroup {
                          "caching": true,
                          "d": [Function],
                          "keyMaker": Trie {
                            "makeData": [Function],
                            "weakness": true,
                          },
                          "parent": null,
                        },
                      },
                      "id": "EntityStore.Stump",
                      "parent": [Circular],
                      "policies": Policies {
                        "cache": [Circular],
                        "config": Object {
                          "cache": [Circular],
                          "dataIdFromObject": [Function],
                          "possibleTypes": undefined,
                          "typePolicies": undefined,
                        },
                        "fuzzySubtypes": Map {},
                        "rootIdsByTypename": Object {
                          "Mutation": "ROOT_MUTATION",
                          "Query": "ROOT_QUERY",
                          "Subscription": "ROOT_SUBSCRIPTION",
                        },
                        "rootTypenamesById": Object {
                          "ROOT_MUTATION": "Mutation",
                          "ROOT_QUERY": "Query",
                          "ROOT_SUBSCRIPTION": "Subscription",
                        },
                        "supertypeMap": Map {},
                        "toBeAdded": Object {},
                        "typePolicies": Object {
                          "Query": Object {
                            "fields": Object {},
                          },
                        },
                        "usingPossibleTypes": false,
                      },
                      "refs": Object {},
                      "replay": [Function],
                      "rootIds": Object {},
                      "toReference": [Function],
                    },
                    "toReference": [Function],
                  },
                  "evict": [Function],
                  "getFragmentDoc": [Function],
                  "makeVar": [Function],
                  "maybeBroadcastWatch": [Function],
                  "modify": [Function],
                  "optimisticData": Stump {
                    "canRead": [Function],
                    "data": Object {},
                    "getFieldValue": [Function],
                    "group": CacheGroup {
                      "caching": true,
                      "d": [Function],
                      "keyMaker": Trie {
                        "makeData": [Function],
                        "weak": WeakMap {},
                        "weakness": true,
                      },
                      "parent": CacheGroup {
                        "caching": true,
                        "d": [Function],
                        "keyMaker": Trie {
                          "makeData": [Function],
                          "weakness": true,
                        },
                        "parent": null,
                      },
                    },
                    "id": "EntityStore.Stump",
                    "parent": Root {
                      "canRead": [Function],
                      "data": Object {
                        "ROOT_QUERY": Object {
                          "__typename": "Query",
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                      },
                      "getFieldValue": [Function],
                      "group": CacheGroup {
                        "caching": true,
                        "d": [Function],
                        "keyMaker": Trie {
                          "makeData": [Function],
                          "weakness": true,
                        },
                        "parent": null,
                      },
                      "policies": Policies {
                        "cache": [Circular],
                        "config": Object {
                          "cache": [Circular],
                          "dataIdFromObject": [Function],
                          "possibleTypes": undefined,
                          "typePolicies": undefined,
                        },
                        "fuzzySubtypes": Map {},
                        "rootIdsByTypename": Object {
                          "Mutation": "ROOT_MUTATION",
                          "Query": "ROOT_QUERY",
                          "Subscription": "ROOT_SUBSCRIPTION",
                        },
                        "rootTypenamesById": Object {
                          "ROOT_MUTATION": "Mutation",
                          "ROOT_QUERY": "Query",
                          "ROOT_SUBSCRIPTION": "Subscription",
                        },
                        "supertypeMap": Map {},
                        "toBeAdded": Object {},
                        "typePolicies": Object {
                          "Query": Object {
                            "fields": Object {},
                          },
                        },
                        "usingPossibleTypes": false,
                      },
                      "refs": Object {},
                      "rootIds": Object {
                        "ROOT_QUERY": 1,
                      },
                      "storageTrie": Trie {
                        "makeData": [Function],
                        "weakness": true,
                      },
                      "stump": [Circular],
                      "toReference": [Function],
                    },
                    "policies": Policies {
                      "cache": [Circular],
                      "config": Object {
                        "cache": [Circular],
                        "dataIdFromObject": [Function],
                        "possibleTypes": undefined,
                        "typePolicies": undefined,
                      },
                      "fuzzySubtypes": Map {},
                      "rootIdsByTypename": Object {
                        "Mutation": "ROOT_MUTATION",
                        "Query": "ROOT_QUERY",
                        "Subscription": "ROOT_SUBSCRIPTION",
                      },
                      "rootTypenamesById": Object {
                        "ROOT_MUTATION": "Mutation",
                        "ROOT_QUERY": "Query",
                        "ROOT_SUBSCRIPTION": "Subscription",
                      },
                      "supertypeMap": Map {},
                      "toBeAdded": Object {},
                      "typePolicies": Object {
                        "Query": Object {
                          "fields": Object {},
                        },
                      },
                      "usingPossibleTypes": false,
                    },
                    "refs": Object {},
                    "replay": [Function],
                    "rootIds": Object {},
                    "toReference": [Function],
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": undefined,
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "reset": [Function],
                  "storeReader": StoreReader {
                    "canon": ObjectCanon {
                      "empty": Object {},
                      "keysByJSON": Map {
                        "[]" => Object {
                          "json": "[]",
                          "sorted": Array [],
                        },
                      },
                      "known": WeakSet {},
                      "passes": WeakMap {},
                      "pool": Trie {
                        "data": Object {
                          "keys": Object {
                            "json": "[]",
                            "sorted": Array [],
                          },
                        },
                        "makeData": [Function],
                        "weak": WeakMap {},
                        "weakness": true,
                      },
                    },
                    "config": Object {
                      "addTypename": false,
                      "cache": [Circular],
                      "canonizeResults": false,
                    },
                    "executeSelectionSet": [Function],
                    "executeSubSelectedArray": [Function],
                    "knownResults": WeakMap {},
                  },
                  "storeWriter": StoreWriter {
                    "cache": [Circular],
                    "reader": StoreReader {
                      "canon": ObjectCanon {
                        "empty": Object {},
                        "keysByJSON": Map {
                          "[]" => Object {
                            "json": "[]",
                            "sorted": Array [],
                          },
                        },
                        "known": WeakSet {},
                        "passes": WeakMap {},
                        "pool": Trie {
                          "data": Object {
                            "keys": Object {
                              "json": "[]",
                              "sorted": Array [],
                            },
                          },
                          "makeData": [Function],
                          "weak": WeakMap {},
                          "weakness": true,
                        },
                      },
                      "config": Object {
                        "addTypename": false,
                        "cache": [Circular],
                        "canonizeResults": false,
                      },
                      "executeSelectionSet": [Function],
                      "executeSubSelectedArray": [Function],
                      "knownResults": WeakMap {},
                    },
                  },
                  "txCount": 0,
                  "typenameDocumentCache": Map {},
                  "watches": Set {
                    Object {
                      "callback": [Function],
                      "canonizeResults": undefined,
                      "lastDiff": Object {
                        "complete": true,
                        "missing": undefined,
                        "result": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                      },
                      "optimistic": true,
                      "query": Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "GetUsers",
                            },
                            "operation": "query",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "users",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "email",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "accessLevel",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "creationDate",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "lastActivity",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "activeSessions",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 140,
                          "start": 0,
                        },
                      },
                      "returnPartialData": true,
                      "variables": Object {},
                      "watcher": [Circular],
                    },
                  },
                },
                "cancel": [Function],
                "dirty": false,
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GetUsers",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "users",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "email",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "accessLevel",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "creationDate",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "lastActivity",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "activeSessions",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 140,
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "lastDiff": Object {
                  "diff": Object {
                    "complete": true,
                    "missing": undefined,
                    "result": Object {
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "options": Object {
                    "canonizeResults": undefined,
                    "optimistic": true,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetUsers",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "users",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "accessLevel",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "creationDate",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "lastActivity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "activeSessions",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 140,
                        "start": 0,
                      },
                    },
                    "returnPartialData": true,
                    "variables": Object {},
                  },
                },
                "lastRequestId": 1,
                "lastWatch": Object {
                  "callback": [Function],
                  "canonizeResults": undefined,
                  "lastDiff": Object {
                    "complete": true,
                    "missing": undefined,
                    "result": Object {
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "optimistic": true,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GetUsers",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "users",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "accessLevel",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "creationDate",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "lastActivity",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "activeSessions",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 140,
                      "start": 0,
                    },
                  },
                  "returnPartialData": true,
                  "variables": Object {},
                  "watcher": [Circular],
                },
                "lastWrite": Object {
                  "dmCount": 0,
                  "result": Object {
                    "data": Object {
                      "users": Array [
                        Object {
                          "accessLevel": "ADMIN",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user1@konstellation.com",
                          "id": "user1",
                          "lastActivity": "2018-01-01",
                        },
                        Object {
                          "accessLevel": "MANAGER",
                          "activeSessions": 4,
                          "creationDate": "2018-01-01",
                          "email": "user2@konstellation.com",
                          "id": "user2",
                          "lastActivity": "2018-01-01",
                        },
                      ],
                    },
                  },
                  "variables": Object {},
                },
                "listeners": Set {
                  [Function],
                },
                "networkError": null,
                "networkStatus": 7,
                "observableQuery": ObservableQuery {
                  "_subscriber": [Function],
                  "concast": Concast {
                    "_subscriber": [Function],
                    "addCount": 1,
                    "cancel": [Function],
                    "handlers": Object {
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "latest": Array [
                      "next",
                      Object {
                        "data": Object {
                          "users": Array [
                            Object {
                              "accessLevel": "ADMIN",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user1@konstellation.com",
                              "id": "user1",
                              "lastActivity": "2018-01-01",
                            },
                            Object {
                              "accessLevel": "MANAGER",
                              "activeSessions": 4,
                              "creationDate": "2018-01-01",
                              "email": "user2@konstellation.com",
                              "id": "user2",
                              "lastActivity": "2018-01-01",
                            },
                          ],
                        },
                        "loading": false,
                        "networkStatus": 7,
                      },
                    ],
                    "observers": Set {
                      Object {
                        "error": [Function],
                        "next": [Function],
                      },
                    },
                    "promise": Promise {},
                    "reject": [Function],
                    "resolve": [Function],
                    "sources": Array [],
                    "sub": null,
                  },
                  "initialFetchPolicy": "cache-first",
                  "isTornDown": false,
                  "last": Object {
                    "result": Object {
                      "data": Object {
                        "users": Array [
                          Object {
                            "accessLevel": "ADMIN",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user1@konstellation.com",
                            "id": "user1",
                            "lastActivity": "2018-01-01",
                          },
                          Object {
                            "accessLevel": "MANAGER",
                            "activeSessions": 4,
                            "creationDate": "2018-01-01",
                            "email": "user2@konstellation.com",
                            "id": "user2",
                            "lastActivity": "2018-01-01",
                          },
                        ],
                      },
                      "loading": false,
                      "networkStatus": 7,
                    },
                    "variables": Object {},
                  },
                  "observer": Object {
                    "error": [Function],
                    "next": [Function],
                  },
                  "observers": Set {
                    SubscriptionObserver {
                      "_subscription": Subscription {
                        "_cleanup": [Function],
                        "_observer": Object {
                          "complete": undefined,
                          "error": [Function],
                          "next": [Function],
                        },
                        "_queue": undefined,
                        "_state": "ready",
                      },
                    },
                  },
                  "options": Object {
                    "fetchPolicy": "cache-first",
                    "notifyOnNetworkStatusChange": false,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetUsers",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "users",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "accessLevel",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "creationDate",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "lastActivity",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "activeSessions",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 140,
                        "start": 0,
                      },
                    },
                    "variables": Object {},
                  },
                  "queryId": "1",
                  "queryInfo": [Circular],
                  "queryManager": [Circular],
                  "queryName": "GetUsers",
                  "subscriptions": Set {},
                },
                "oqListener": [Function],
                "queryId": "1",
                "stopped": false,
                "subscriptions": Set {},
                "variables": Object {},
              },
            },
            "queryDeduplication": true,
            "queryIdCounter": 2,
            "requestIdCounter": 2,
            "ssrMode": false,
            "transformCache": WeakMap {},
          },
          "reFetchObservableQueries": [Function],
          "resetStore": [Function],
          "resetStoreCallbacks": Array [],
          "typeDefs": undefined,
          "version": "3.5.6",
          "watchQuery": [Function],
        }
      }
    >
      <FiltersBar
        errors={Object {}}
        reset={[MockFunction]}
        runtimesAndVersions={
          Array [
            Object {
              "runtime": Object {
                "__typename": "Runtime",
                "creationDate": "creationDate",
                "databaseUrl": "databaseUrl",
                "description": "Some Description",
                "entrypointAddress": "entrypointAddress",
                "id": "runtimeId",
                "measurementsUrl": "measurementsUrl",
                "name": "runtimeName",
              },
              "versions": Array [
                Object {
                  "__typename": "Version",
                  "config": Object {
                    "__typename": "VersionUserConfig",
                    "completed": false,
                  },
                  "creationAuthor": Object {
                    "__typename": "User",
                    "email": "user@domain.com",
                    "id": "userId",
                  },
                  "creationDate": "2020/01/01",
                  "description": "versionDescription",
                  "errors": Array [],
                  "hasDoc": false,
                  "id": "versionId",
                  "name": "versionName",
                  "publicationAuthor": Object {
                    "__typename": "User",
                    "email": "user@domain.com",
                    "id": "userId",
                  },
                  "publicationDate": "2020/01/01",
                  "status": "STARTED",
                },
                Object {
                  "__typename": "Version",
                  "config": Object {
                    "__typename": "VersionUserConfig",
                    "completed": false,
                  },
                  "creationAuthor": Object {
                    "__typename": "User",
                    "email": "user@domain.com",
                    "id": "userId",
                  },
                  "creationDate": "2020/01/01",
                  "description": "versionDescription",
                  "errors": Array [],
                  "hasDoc": false,
                  "id": "versionId",
                  "name": "versionName",
                  "publicationAuthor": Object {
                    "__typename": "User",
                    "email": "user@domain.com",
                    "id": "userId",
                  },
                  "publicationDate": "2020/01/01",
                  "status": "STARTED",
                },
              ],
            },
          ]
        }
        setAndSubmit={[MockFunction]}
        watch={
          [MockFunction] {
            "calls": Array [
              Array [
                "userEmail",
              ],
              Array [
                "versionIds",
              ],
              Array [
                "types",
              ],
              Array [
                "fromDate",
              ],
              Array [
                "toDate",
              ],
              Array [
                "userEmail",
              ],
              Array [
                "versionIds",
              ],
              Array [
                "types",
              ],
              Array [
                "fromDate",
              ],
              Array [
                "toDate",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <form
          className="formField"
        >
          <div>
            <Component
              label="search a user"
              name="userEmail"
              onChange={[Function]}
              options={
                Array [
                  "user1@konstellation.com",
                  "user2@konstellation.com",
                ]
              }
              placeholder="User email"
            >
              <div
                className="_82QGI _1C2q-"
              >
                <z
                  text="search a user"
                >
                  <label
                    className="_3JtYz"
                    data-testid="label"
                  >
                    SEARCH A USER
                  </label>
                </z>
                <div
                  className="_1wPLW"
                >
                  <div
                    className="_1j-sT"
                  >
                    <input
                      autoComplete="off"
                      className="_YghJM"
                      name="userEmail"
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      placeholder="User email"
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="_3LQr6"
                    onClick={[Function]}
                    title="Clear input"
                  >
                    <ForwardRef(CloseIcon)
                      className="icon-small"
                    >
                      <WithStyles(ForwardRef(SvgIcon))
                        className="icon-small"
                      >
                        <ForwardRef(SvgIcon)
                          className="icon-small"
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root icon-small"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(CloseIcon)>
                  </div>
                </div>
                <ul
                  className="_1Em_G"
                />
                <V
                  message=""
                >
                  <div
                    className="_2fvTK"
                  />
                </V>
              </div>
            </Component>
          </div>
          <div>
            <Component
              hideSelections={true}
              label="filter by versions"
              onChange={[Function]}
              options={
                Object {
                  "runtimeName": Array [
                    "versionName",
                    "versionName",
                  ],
                }
              }
              placeholder="Select Versions"
            >
              <div
                className="_1usSP"
              >
                <z
                  text="filter by versions"
                >
                  <label
                    className="_3JtYz"
                    data-testid="label"
                  >
                    FILTER BY VERSIONS
                  </label>
                </z>
                <div
                  className="_3ifZl"
                >
                  <div
                    className="_2cp0Q _2tAa-"
                    onClick={[Function]}
                  >
                    Select Versions
                  </div>
                  <N
                    className="_2JwOA"
                    close={[Function]}
                    opened={false}
                  >
                    <AnimateHeight
                      animateOpacity={false}
                      animationStateClasses={
                        Object {
                          "animating": "rah-animating",
                          "animatingDown": "rah-animating--down",
                          "animatingToHeightAuto": "rah-animating--to-height-auto",
                          "animatingToHeightSpecific": "rah-animating--to-height-specific",
                          "animatingToHeightZero": "rah-animating--to-height-zero",
                          "animatingUp": "rah-animating--up",
                          "static": "rah-static",
                          "staticHeightAuto": "rah-static--height-auto",
                          "staticHeightSpecific": "rah-static--height-specific",
                          "staticHeightZero": "rah-static--height-zero",
                        }
                      }
                      applyInlineTransitions={true}
                      className="_2JwOA"
                      delay={0}
                      duration={300}
                      easing="ease"
                      height={0}
                      onAnimationEnd={[Function]}
                      style={Object {}}
                    >
                      <div
                        aria-hidden={true}
                        className="rah-static rah-static--height-zero _2JwOA"
                        style={
                          Object {
                            "height": 0,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <div
                          style={Object {}}
                        />
                      </div>
                    </AnimateHeight>
                  </N>
                </div>
                <V
                  message=""
                >
                  <div
                    className="_2fvTK"
                  />
                </V>
              </div>
            </Component>
          </div>
          <div>
            <Component
              customLabels={
                Map {
                  "LOGIN" => <CustomLabel>
                    Login
                  </CustomLabel>,
                  "LOGOUT" => <CustomLabel>
                    Logout
                  </CustomLabel>,
                  "CREATE_VERSION" => <CustomLabel>
                    Version Created
                  </CustomLabel>,
                  "GENERATE_API_TOKEN" => <CustomLabel>
                    API Token Created
                  </CustomLabel>,
                  "DELETE_API_TOKEN" => <CustomLabel>
                    API Token Removed
                  </CustomLabel>,
                  "PUBLISH_VERSION" => <CustomLabel
                    color="highlight"
                    highlight="published"
                  >
                    Version published
                  </CustomLabel>,
                  "UNPUBLISH_VERSION" => <CustomLabel
                    color="feedback"
                    highlight="unpublished"
                  >
                    Version unpublished
                  </CustomLabel>,
                  "STOP_VERSION" => <CustomLabel
                    color="regular"
                    highlight="stopped"
                  >
                    Version stopped
                  </CustomLabel>,
                  "START_VERSION" => <CustomLabel
                    color="success"
                    highlight="started"
                  >
                    Version started
                  </CustomLabel>,
                  "UPDATE_SETTING" => <CustomLabel>
                    Settings updated
                  </CustomLabel>,
                  "UPDATE_VERSION_CONFIGURATION" => <CustomLabel>
                    Version conf. changed
                  </CustomLabel>,
                  "CREATE_USER" => <CustomLabel>
                    User created
                  </CustomLabel>,
                  "REMOVE_USERS" => <CustomLabel>
                    Users removed
                  </CustomLabel>,
                  "UPDATE_ACCESS_LEVELS" => <CustomLabel>
                    Users updated
                  </CustomLabel>,
                  "REVOKE_SESSIONS" => <CustomLabel>
                    Session revoked
                  </CustomLabel>,
                }
              }
              iconAtStart={true}
              label="Activity type"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="CREATE_RUNTIME"
                      invert={true}
                    />,
                    "label": "CREATE_RUNTIME",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="CREATE_USER"
                      invert={true}
                    />,
                    "label": "CREATE_USER",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="CREATE_VERSION"
                      invert={true}
                    />,
                    "label": "CREATE_VERSION",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="DELETE_API_TOKEN"
                      invert={true}
                    />,
                    "label": "DELETE_API_TOKEN",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="GENERATE_API_TOKEN"
                      invert={true}
                    />,
                    "label": "GENERATE_API_TOKEN",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="LOGIN"
                      invert={true}
                    />,
                    "label": "LOGIN",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="LOGOUT"
                      invert={true}
                    />,
                    "label": "LOGOUT",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="PUBLISH_VERSION"
                      invert={true}
                    />,
                    "label": "PUBLISH_VERSION",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="REMOVE_USERS"
                      invert={true}
                    />,
                    "label": "REMOVE_USERS",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="REVOKE_SESSIONS"
                      invert={true}
                    />,
                    "label": "REVOKE_SESSIONS",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="START_VERSION"
                      invert={true}
                    />,
                    "label": "START_VERSION",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="STOP_VERSION"
                      invert={true}
                    />,
                    "label": "STOP_VERSION",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="UNPUBLISH_VERSION"
                      invert={true}
                    />,
                    "label": "UNPUBLISH_VERSION",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="UPDATE_ACCESS_LEVELS"
                      invert={true}
                    />,
                    "label": "UPDATE_ACCESS_LEVELS",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="UPDATE_SETTING"
                      invert={true}
                    />,
                    "label": "UPDATE_SETTING",
                  },
                  Object {
                    "Icon": <Memo(ActivityIcon)
                      activityType="UPDATE_VERSION_CONFIGURATION"
                      invert={true}
                    />,
                    "label": "UPDATE_VERSION_CONFIGURATION",
                  },
                ]
              }
              placeholder="ALL TYPES"
              selectAllText="ALL TYPES"
              selectionUnit="TYPE"
            >
              <div
                className="_DP1dK"
              >
                <z
                  text="Activity type"
                >
                  <label
                    className="_3JtYz"
                    data-testid="label"
                  >
                    ACTIVITY TYPE
                  </label>
                </z>
                <div
                  className="_3ouoE"
                >
                  <div
                    className="_1OtNf _Y3FUe"
                    onClick={[Function]}
                  >
                    ALL TYPES
                  </div>
                  <N
                    className="_3K0FO"
                    close={[Function]}
                    opened={false}
                  >
                    <AnimateHeight
                      animateOpacity={false}
                      animationStateClasses={
                        Object {
                          "animating": "rah-animating",
                          "animatingDown": "rah-animating--down",
                          "animatingToHeightAuto": "rah-animating--to-height-auto",
                          "animatingToHeightSpecific": "rah-animating--to-height-specific",
                          "animatingToHeightZero": "rah-animating--to-height-zero",
                          "animatingUp": "rah-animating--up",
                          "static": "rah-static",
                          "staticHeightAuto": "rah-static--height-auto",
                          "staticHeightSpecific": "rah-static--height-specific",
                          "staticHeightZero": "rah-static--height-zero",
                        }
                      }
                      applyInlineTransitions={true}
                      className="_3K0FO"
                      delay={0}
                      duration={300}
                      easing="ease"
                      height={0}
                      onAnimationEnd={[Function]}
                      style={Object {}}
                    >
                      <div
                        aria-hidden={true}
                        className="rah-static rah-static--height-zero _3K0FO"
                        style={
                          Object {
                            "height": 0,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <div
                          style={Object {}}
                        />
                      </div>
                    </AnimateHeight>
                  </N>
                </div>
                <V
                  message=""
                >
                  <div
                    className="_2fvTK"
                  />
                </V>
              </div>
            </Component>
          </div>
          <div>
            <Z
              label="dates selection"
              onChangeFromDateInput={[Function]}
              onChangeToDateInput={[Function]}
            >
              <div>
                <z
                  text="dates selection"
                >
                  <label
                    className="_3JtYz"
                    data-testid="label"
                  >
                    DATES SELECTION
                  </label>
                </z>
                <withStyles(DateRangePicker)
                  anchorDirection="left"
                  appendToBody={false}
                  block={false}
                  calendarInfoPosition="bottom"
                  customArrowIcon={
                    <Memo
                      className="icon-small"
                    />
                  }
                  customCloseIcon={null}
                  customInputIcon={null}
                  dayPickerNavigationInlineStyles={null}
                  daySize={39}
                  disableScroll={false}
                  disabled={false}
                  displayFormat="MM/DD/YYYY"
                  enableOutsideDays={false}
                  endDate={null}
                  endDateId="calendar_to_date"
                  endDatePlaceholderText="To Date"
                  firstDayOfWeek={null}
                  focusedInput={null}
                  hideKeyboardShortcutsPanel={false}
                  horizontalMargin={0}
                  initialVisibleMonth={null}
                  inputIconPosition="before"
                  isDayBlocked={[Function]}
                  isDayHighlighted={[Function]}
                  isOutsideRange={[Function]}
                  isRTL={false}
                  keepFocusOnInput={false}
                  keepOpenOnDateSelect={false}
                  minimumNights={0}
                  monthFormat="MMMM YYYY"
                  navNext={
                    <div
                      className="DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5"
                    >
                      <Memo
                        className="icon-small"
                        style={
                          Object {
                            "margin": "0 8px",
                          }
                        }
                      />
                    </div>
                  }
                  navPosition="navPositionTop"
                  navPrev={
                    <div
                      className="DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5"
                    >
                      <Memo
                        className="icon-small"
                        style={
                          Object {
                            "margin": "0 8px",
                          }
                        }
                      />
                    </div>
                  }
                  noBorder={false}
                  numberOfMonths={2}
                  onClose={[Function]}
                  onDatesChange={[Function]}
                  onFocusChange={[Function]}
                  onNextMonthClick={[Function]}
                  onPrevMonthClick={[Function]}
                  openDirection="down"
                  orientation="horizontal"
                  phrases={
                    Object {
                      "calendarLabel": "Calendar",
                      "chooseAvailableEndDate": [Function],
                      "chooseAvailableStartDate": [Function],
                      "clearDates": "Clear Dates",
                      "closeDatePicker": "Close",
                      "dateIsSelected": [Function],
                      "dateIsSelectedAsEndDate": [Function],
                      "dateIsSelectedAsStartDate": [Function],
                      "dateIsUnavailable": [Function],
                      "enterKey": "Enter key",
                      "escape": "Escape key",
                      "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                      "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                      "homeEnd": "Home and end keys",
                      "jumpToNextMonth": "Move forward to switch to the next month.",
                      "jumpToPrevMonth": "Move backward to switch to the previous month.",
                      "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardShortcuts": "Keyboard Shortcuts",
                      "leftArrowRightArrow": "Right and left arrow keys",
                      "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                      "moveFocusByOneMonth": "Switch months.",
                      "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                      "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                      "openThisPanel": "Open this panel.",
                      "pageUpPageDown": "page up and page down keys",
                      "questionMark": "Question mark",
                      "returnFocusToInput": "Return to the date input field.",
                      "roleDescription": "datepicker",
                      "selectFocusedDate": "Select the date in focus.",
                      "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                      "upArrowDownArrow": "up and down arrow keys",
                    }
                  }
                  readOnly={false}
                  regular={false}
                  renderCalendarInfo={[Function]}
                  renderDayContents={null}
                  renderMonthElement={null}
                  renderMonthText={null}
                  renderNavNextButton={null}
                  renderNavPrevButton={null}
                  renderWeekHeaderElement={null}
                  reopenPickerOnClearDates={false}
                  required={false}
                  screenReaderInputMessage=""
                  showClearDates={false}
                  showDefaultInputIcon={false}
                  small={false}
                  startDate={null}
                  startDateId="calendar_from_date"
                  startDatePlaceholderText="From Date"
                  verticalHeight={null}
                  verticalSpacing={22}
                  weekDayFormat="dd"
                  withFullScreenPortal={false}
                  withPortal={false}
                >
                  <DateRangePicker
                    anchorDirection="left"
                    appendToBody={false}
                    block={false}
                    calendarInfoPosition="bottom"
                    css={[Function]}
                    customArrowIcon={
                      <Memo
                        className="icon-small"
                      />
                    }
                    customCloseIcon={null}
                    customInputIcon={null}
                    dayPickerNavigationInlineStyles={null}
                    daySize={39}
                    disableScroll={false}
                    disabled={false}
                    displayFormat="MM/DD/YYYY"
                    enableOutsideDays={false}
                    endDate={null}
                    endDateId="calendar_to_date"
                    endDatePlaceholderText="To Date"
                    firstDayOfWeek={null}
                    focusedInput={null}
                    hideKeyboardShortcutsPanel={false}
                    horizontalMargin={0}
                    initialVisibleMonth={null}
                    inputIconPosition="before"
                    isDayBlocked={[Function]}
                    isDayHighlighted={[Function]}
                    isOutsideRange={[Function]}
                    isRTL={false}
                    keepFocusOnInput={false}
                    keepOpenOnDateSelect={false}
                    minimumNights={0}
                    monthFormat="MMMM YYYY"
                    navNext={
                      <div
                        className="DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5"
                      >
                        <Memo
                          className="icon-small"
                          style={
                            Object {
                              "margin": "0 8px",
                            }
                          }
                        />
                      </div>
                    }
                    navPosition="navPositionTop"
                    navPrev={
                      <div
                        className="DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5"
                      >
                        <Memo
                          className="icon-small"
                          style={
                            Object {
                              "margin": "0 8px",
                            }
                          }
                        />
                      </div>
                    }
                    noBorder={false}
                    numberOfMonths={2}
                    onClose={[Function]}
                    onDatesChange={[Function]}
                    onFocusChange={[Function]}
                    onNextMonthClick={[Function]}
                    onPrevMonthClick={[Function]}
                    openDirection="down"
                    orientation="horizontal"
                    phrases={
                      Object {
                        "calendarLabel": "Calendar",
                        "chooseAvailableEndDate": [Function],
                        "chooseAvailableStartDate": [Function],
                        "clearDates": "Clear Dates",
                        "closeDatePicker": "Close",
                        "dateIsSelected": [Function],
                        "dateIsSelectedAsEndDate": [Function],
                        "dateIsSelectedAsStartDate": [Function],
                        "dateIsUnavailable": [Function],
                        "enterKey": "Enter key",
                        "escape": "Escape key",
                        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                        "homeEnd": "Home and end keys",
                        "jumpToNextMonth": "Move forward to switch to the next month.",
                        "jumpToPrevMonth": "Move backward to switch to the previous month.",
                        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                        "keyboardShortcuts": "Keyboard Shortcuts",
                        "leftArrowRightArrow": "Right and left arrow keys",
                        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                        "moveFocusByOneMonth": "Switch months.",
                        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                        "openThisPanel": "Open this panel.",
                        "pageUpPageDown": "page up and page down keys",
                        "questionMark": "Question mark",
                        "returnFocusToInput": "Return to the date input field.",
                        "roleDescription": "datepicker",
                        "selectFocusedDate": "Select the date in focus.",
                        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                        "upArrowDownArrow": "up and down arrow keys",
                      }
                    }
                    readOnly={false}
                    regular={false}
                    renderCalendarInfo={[Function]}
                    renderDayContents={null}
                    renderMonthElement={null}
                    renderMonthText={null}
                    renderNavNextButton={null}
                    renderNavPrevButton={null}
                    renderWeekHeaderElement={null}
                    reopenPickerOnClearDates={false}
                    required={false}
                    screenReaderInputMessage=""
                    showClearDates={false}
                    showDefaultInputIcon={false}
                    small={false}
                    startDate={null}
                    startDateId="calendar_from_date"
                    startDatePlaceholderText="From Date"
                    styles={
                      Object {
                        "DateRangePicker": "DateRangePicker",
                        "DateRangePicker__block": "DateRangePicker__block",
                        "DateRangePicker_closeButton": "DateRangePicker_closeButton",
                        "DateRangePicker_closeButton_svg": "DateRangePicker_closeButton_svg",
                        "DateRangePicker_picker": "DateRangePicker_picker",
                        "DateRangePicker_picker__directionLeft": "DateRangePicker_picker__directionLeft",
                        "DateRangePicker_picker__directionRight": "DateRangePicker_picker__directionRight",
                        "DateRangePicker_picker__fullScreenPortal": "DateRangePicker_picker__fullScreenPortal",
                        "DateRangePicker_picker__portal": "DateRangePicker_picker__portal",
                        "DateRangePicker_picker__rtl": "DateRangePicker_picker__rtl",
                      }
                    }
                    theme={
                      Object {
                        "reactDates": Object {
                          "border": Object {
                            "input": Object {
                              "border": 0,
                              "borderBottom": "2px solid transparent",
                              "borderBottomFocused": "2px solid #008489",
                              "borderFocused": 0,
                              "borderLeft": 0,
                              "borderLeftFocused": 0,
                              "borderRadius": 0,
                              "borderRight": 0,
                              "borderRightFocused": 0,
                              "borderTop": 0,
                              "borderTopFocused": 0,
                              "outlineFocused": 0,
                            },
                            "pickerInput": Object {
                              "borderRadius": 2,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                            },
                          },
                          "color": Object {
                            "background": "#fff",
                            "backgroundDark": "#f2f2f2",
                            "backgroundFocused": "#fff",
                            "blocked_calendar": Object {
                              "backgroundColor": "#cacccd",
                              "backgroundColor_active": "#cacccd",
                              "backgroundColor_hover": "#cacccd",
                              "borderColor": "#cacccd",
                              "borderColor_active": "#cacccd",
                              "borderColor_hover": "#cacccd",
                              "color": "#82888a",
                              "color_active": "#82888a",
                              "color_hover": "#82888a",
                            },
                            "blocked_out_of_range": Object {
                              "backgroundColor": "#fff",
                              "backgroundColor_active": "#fff",
                              "backgroundColor_hover": "#fff",
                              "borderColor": "#e4e7e7",
                              "borderColor_active": "#e4e7e7",
                              "borderColor_hover": "#e4e7e7",
                              "color": "#cacccd",
                              "color_active": "#cacccd",
                              "color_hover": "#cacccd",
                            },
                            "border": "rgb(219, 219, 219)",
                            "core": Object {
                              "border": "#dbdbdb",
                              "borderBright": "#f4f5f5",
                              "borderLight": "#e4e7e7",
                              "borderLighter": "#eceeee",
                              "borderMedium": "#c4c4c4",
                              "gray": "#484848",
                              "grayLight": "#82888a",
                              "grayLighter": "#cacccd",
                              "grayLightest": "#f2f2f2",
                              "primary": "#00a699",
                              "primaryShade_1": "#33dacd",
                              "primaryShade_2": "#66e2da",
                              "primaryShade_3": "#80e8e0",
                              "primaryShade_4": "#b2f1ec",
                              "primary_dark": "#008489",
                              "secondary": "#007a87",
                              "white": "#fff",
                              "yellow": "#ffe8bc",
                              "yellow_dark": "#ffce71",
                            },
                            "disabled": "#f2f2f2",
                            "highlighted": Object {
                              "backgroundColor": "#ffe8bc",
                              "backgroundColor_active": "#ffce71",
                              "backgroundColor_hover": "#ffce71",
                              "color": "#484848",
                              "color_active": "#484848",
                              "color_hover": "#484848",
                            },
                            "hoveredSpan": Object {
                              "backgroundColor": "#b2f1ec",
                              "backgroundColor_active": "#80e8e0",
                              "backgroundColor_hover": "#b2f1ec",
                              "borderColor": "#80e8e0",
                              "borderColor_active": "#80e8e0",
                              "borderColor_hover": "#80e8e0",
                              "color": "#007a87",
                              "color_active": "#007a87",
                              "color_hover": "#007a87",
                            },
                            "minimumNights": Object {
                              "backgroundColor": "#fff",
                              "backgroundColor_active": "#fff",
                              "backgroundColor_hover": "#fff",
                              "borderColor": "#eceeee",
                              "color": "#cacccd",
                              "color_active": "#cacccd",
                              "color_hover": "#cacccd",
                            },
                            "outside": Object {
                              "backgroundColor": "#fff",
                              "backgroundColor_active": "#fff",
                              "backgroundColor_hover": "#fff",
                              "color": "#484848",
                              "color_active": "#484848",
                              "color_hover": "#484848",
                            },
                            "placeholderText": "#757575",
                            "selected": Object {
                              "backgroundColor": "#00a699",
                              "backgroundColor_active": "#00a699",
                              "backgroundColor_hover": "#00a699",
                              "borderColor": "#00a699",
                              "borderColor_active": "#00a699",
                              "borderColor_hover": "#00a699",
                              "color": "#fff",
                              "color_active": "#fff",
                              "color_hover": "#fff",
                            },
                            "selectedSpan": Object {
                              "backgroundColor": "#66e2da",
                              "backgroundColor_active": "#33dacd",
                              "backgroundColor_hover": "#33dacd",
                              "borderColor": "#33dacd",
                              "borderColor_active": "#00a699",
                              "borderColor_hover": "#00a699",
                              "color": "#fff",
                              "color_active": "#fff",
                              "color_hover": "#fff",
                            },
                            "text": "#484848",
                            "textDisabled": "#dbdbdb",
                            "textFocused": "#007a87",
                          },
                          "font": Object {
                            "captionSize": 18,
                            "input": Object {
                              "letterSpacing_small": "0.2px",
                              "lineHeight": "24px",
                              "lineHeight_small": "18px",
                              "size": 19,
                              "size_small": 15,
                              "styleDisabled": "italic",
                              "weight": 200,
                            },
                            "size": 14,
                          },
                          "noScrollBarOnVerticalScrollable": false,
                          "sizing": Object {
                            "arrowWidth": 24,
                            "inputWidth": 130,
                            "inputWidth_small": 97,
                          },
                          "spacing": Object {
                            "captionPaddingBottom": 37,
                            "captionPaddingTop": 22,
                            "dayPickerHorizontalPadding": 9,
                            "displayTextPaddingBottom": 9,
                            "displayTextPaddingBottom_small": 5,
                            "displayTextPaddingHorizontal": undefined,
                            "displayTextPaddingHorizontal_small": undefined,
                            "displayTextPaddingLeft": 11,
                            "displayTextPaddingLeft_small": 7,
                            "displayTextPaddingRight": 11,
                            "displayTextPaddingRight_small": 7,
                            "displayTextPaddingTop": 11,
                            "displayTextPaddingTop_small": 7,
                            "displayTextPaddingVertical": undefined,
                            "displayTextPaddingVertical_small": undefined,
                            "inputPadding": 0,
                          },
                          "zIndex": 0,
                        },
                      }
                    }
                    verticalHeight={null}
                    verticalSpacing={22}
                    weekDayFormat="dd"
                    withFullScreenPortal={false}
                    withPortal={false}
                  >
                    <div
                      className="DateRangePicker DateRangePicker_1"
                    >
                      <OutsideClickHandler
                        disabled={false}
                        display="block"
                        onOutsideClick={[Function]}
                        useCapture={true}
                      >
                        <div>
                          <DateRangePickerInputController
                            block={false}
                            customArrowIcon={
                              <Memo
                                className="icon-small"
                              />
                            }
                            customCloseIcon={null}
                            customInputIcon={null}
                            disabled={false}
                            displayFormat="MM/DD/YYYY"
                            endDate={null}
                            endDateId="calendar_to_date"
                            endDatePlaceholderText="To Date"
                            inputIconPosition="before"
                            isEndDateFocused={false}
                            isFocused={false}
                            isOutsideRange={[Function]}
                            isRTL={false}
                            isStartDateFocused={false}
                            keepOpenOnDateSelect={false}
                            minimumNights={0}
                            noBorder={false}
                            onClose={[Function]}
                            onDatesChange={[Function]}
                            onFocusChange={[Function]}
                            onKeyDownArrowDown={[Function]}
                            onKeyDownQuestionMark={[Function]}
                            openDirection="down"
                            phrases={
                              Object {
                                "calendarLabel": "Calendar",
                                "chooseAvailableEndDate": [Function],
                                "chooseAvailableStartDate": [Function],
                                "clearDates": "Clear Dates",
                                "closeDatePicker": "Close",
                                "dateIsSelected": [Function],
                                "dateIsSelectedAsEndDate": [Function],
                                "dateIsSelectedAsStartDate": [Function],
                                "dateIsUnavailable": [Function],
                                "enterKey": "Enter key",
                                "escape": "Escape key",
                                "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                "homeEnd": "Home and end keys",
                                "jumpToNextMonth": "Move forward to switch to the next month.",
                                "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                "keyboardShortcuts": "Keyboard Shortcuts",
                                "leftArrowRightArrow": "Right and left arrow keys",
                                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                "moveFocusByOneMonth": "Switch months.",
                                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                "openThisPanel": "Open this panel.",
                                "pageUpPageDown": "page up and page down keys",
                                "questionMark": "Question mark",
                                "returnFocusToInput": "Return to the date input field.",
                                "roleDescription": "datepicker",
                                "selectFocusedDate": "Select the date in focus.",
                                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                "upArrowDownArrow": "up and down arrow keys",
                              }
                            }
                            readOnly={false}
                            regular={false}
                            reopenPickerOnClearDates={false}
                            required={false}
                            screenReaderMessage=""
                            showCaret={true}
                            showClearDates={false}
                            showDefaultInputIcon={false}
                            small={false}
                            startDate={null}
                            startDateId="calendar_from_date"
                            startDatePlaceholderText="From Date"
                            verticalSpacing={22}
                            withFullScreenPortal={false}
                          >
                            <withStyles(DateRangePickerInput)
                              block={false}
                              customArrowIcon={
                                <Memo
                                  className="icon-small"
                                />
                              }
                              customCloseIcon={null}
                              customInputIcon={null}
                              disabled={false}
                              endDate={null}
                              endDateId="calendar_to_date"
                              endDatePlaceholderText="To Date"
                              inputIconPosition="before"
                              isEndDateFocused={false}
                              isFocused={false}
                              isRTL={false}
                              isStartDateFocused={false}
                              noBorder={false}
                              onClearDates={[Function]}
                              onEndDateChange={[Function]}
                              onEndDateFocus={[Function]}
                              onEndDateTab={[Function]}
                              onKeyDownArrowDown={[Function]}
                              onKeyDownQuestionMark={[Function]}
                              onStartDateChange={[Function]}
                              onStartDateFocus={[Function]}
                              onStartDateShiftTab={[Function]}
                              openDirection="down"
                              phrases={
                                Object {
                                  "calendarLabel": "Calendar",
                                  "chooseAvailableEndDate": [Function],
                                  "chooseAvailableStartDate": [Function],
                                  "clearDates": "Clear Dates",
                                  "closeDatePicker": "Close",
                                  "dateIsSelected": [Function],
                                  "dateIsSelectedAsEndDate": [Function],
                                  "dateIsSelectedAsStartDate": [Function],
                                  "dateIsUnavailable": [Function],
                                  "enterKey": "Enter key",
                                  "escape": "Escape key",
                                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                  "homeEnd": "Home and end keys",
                                  "jumpToNextMonth": "Move forward to switch to the next month.",
                                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                  "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                  "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                  "keyboardShortcuts": "Keyboard Shortcuts",
                                  "leftArrowRightArrow": "Right and left arrow keys",
                                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                  "moveFocusByOneMonth": "Switch months.",
                                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                  "openThisPanel": "Open this panel.",
                                  "pageUpPageDown": "page up and page down keys",
                                  "questionMark": "Question mark",
                                  "returnFocusToInput": "Return to the date input field.",
                                  "roleDescription": "datepicker",
                                  "selectFocusedDate": "Select the date in focus.",
                                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                  "upArrowDownArrow": "up and down arrow keys",
                                }
                              }
                              readOnly={false}
                              regular={false}
                              required={false}
                              screenReaderMessage=""
                              showCaret={true}
                              showClearDates={false}
                              showDefaultInputIcon={false}
                              small={false}
                              startDate={null}
                              startDateId="calendar_from_date"
                              startDatePlaceholderText="From Date"
                              verticalSpacing={22}
                            >
                              <DateRangePickerInput
                                block={false}
                                css={[Function]}
                                customArrowIcon={
                                  <Memo
                                    className="icon-small"
                                  />
                                }
                                customCloseIcon={null}
                                customInputIcon={null}
                                disabled={false}
                                endDate={null}
                                endDateId="calendar_to_date"
                                endDatePlaceholderText="To Date"
                                inputIconPosition="before"
                                isEndDateFocused={false}
                                isFocused={false}
                                isRTL={false}
                                isStartDateFocused={false}
                                noBorder={false}
                                onClearDates={[Function]}
                                onEndDateChange={[Function]}
                                onEndDateFocus={[Function]}
                                onEndDateTab={[Function]}
                                onKeyDownArrowDown={[Function]}
                                onKeyDownQuestionMark={[Function]}
                                onStartDateChange={[Function]}
                                onStartDateFocus={[Function]}
                                onStartDateShiftTab={[Function]}
                                openDirection="down"
                                phrases={
                                  Object {
                                    "calendarLabel": "Calendar",
                                    "chooseAvailableEndDate": [Function],
                                    "chooseAvailableStartDate": [Function],
                                    "clearDates": "Clear Dates",
                                    "closeDatePicker": "Close",
                                    "dateIsSelected": [Function],
                                    "dateIsSelectedAsEndDate": [Function],
                                    "dateIsSelectedAsStartDate": [Function],
                                    "dateIsUnavailable": [Function],
                                    "enterKey": "Enter key",
                                    "escape": "Escape key",
                                    "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                    "homeEnd": "Home and end keys",
                                    "jumpToNextMonth": "Move forward to switch to the next month.",
                                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                    "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                    "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                    "keyboardShortcuts": "Keyboard Shortcuts",
                                    "leftArrowRightArrow": "Right and left arrow keys",
                                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                    "moveFocusByOneMonth": "Switch months.",
                                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                    "openThisPanel": "Open this panel.",
                                    "pageUpPageDown": "page up and page down keys",
                                    "questionMark": "Question mark",
                                    "returnFocusToInput": "Return to the date input field.",
                                    "roleDescription": "datepicker",
                                    "selectFocusedDate": "Select the date in focus.",
                                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                    "upArrowDownArrow": "up and down arrow keys",
                                  }
                                }
                                readOnly={false}
                                regular={false}
                                required={false}
                                screenReaderMessage=""
                                showCaret={true}
                                showClearDates={false}
                                showDefaultInputIcon={false}
                                small={false}
                                startDate={null}
                                startDateId="calendar_from_date"
                                startDatePlaceholderText="From Date"
                                styles={
                                  Object {
                                    "DateRangePickerInput": "DateRangePickerInput",
                                    "DateRangePickerInput__block": "DateRangePickerInput__block",
                                    "DateRangePickerInput__disabled": "DateRangePickerInput__disabled",
                                    "DateRangePickerInput__rtl": "DateRangePickerInput__rtl",
                                    "DateRangePickerInput__showClearDates": "DateRangePickerInput__showClearDates",
                                    "DateRangePickerInput__withBorder": "DateRangePickerInput__withBorder",
                                    "DateRangePickerInput_arrow": "DateRangePickerInput_arrow",
                                    "DateRangePickerInput_arrow_svg": "DateRangePickerInput_arrow_svg",
                                    "DateRangePickerInput_calendarIcon": "DateRangePickerInput_calendarIcon",
                                    "DateRangePickerInput_calendarIcon_svg": "DateRangePickerInput_calendarIcon_svg",
                                    "DateRangePickerInput_clearDates": "DateRangePickerInput_clearDates",
                                    "DateRangePickerInput_clearDates__hide": "DateRangePickerInput_clearDates__hide",
                                    "DateRangePickerInput_clearDates__small": "DateRangePickerInput_clearDates__small",
                                    "DateRangePickerInput_clearDates_default": "DateRangePickerInput_clearDates_default",
                                    "DateRangePickerInput_clearDates_svg": "DateRangePickerInput_clearDates_svg",
                                    "DateRangePickerInput_clearDates_svg__small": "DateRangePickerInput_clearDates_svg__small",
                                  }
                                }
                                theme={
                                  Object {
                                    "reactDates": Object {
                                      "border": Object {
                                        "input": Object {
                                          "border": 0,
                                          "borderBottom": "2px solid transparent",
                                          "borderBottomFocused": "2px solid #008489",
                                          "borderFocused": 0,
                                          "borderLeft": 0,
                                          "borderLeftFocused": 0,
                                          "borderRadius": 0,
                                          "borderRight": 0,
                                          "borderRightFocused": 0,
                                          "borderTop": 0,
                                          "borderTopFocused": 0,
                                          "outlineFocused": 0,
                                        },
                                        "pickerInput": Object {
                                          "borderRadius": 2,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                        },
                                      },
                                      "color": Object {
                                        "background": "#fff",
                                        "backgroundDark": "#f2f2f2",
                                        "backgroundFocused": "#fff",
                                        "blocked_calendar": Object {
                                          "backgroundColor": "#cacccd",
                                          "backgroundColor_active": "#cacccd",
                                          "backgroundColor_hover": "#cacccd",
                                          "borderColor": "#cacccd",
                                          "borderColor_active": "#cacccd",
                                          "borderColor_hover": "#cacccd",
                                          "color": "#82888a",
                                          "color_active": "#82888a",
                                          "color_hover": "#82888a",
                                        },
                                        "blocked_out_of_range": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "borderColor": "#e4e7e7",
                                          "borderColor_active": "#e4e7e7",
                                          "borderColor_hover": "#e4e7e7",
                                          "color": "#cacccd",
                                          "color_active": "#cacccd",
                                          "color_hover": "#cacccd",
                                        },
                                        "border": "rgb(219, 219, 219)",
                                        "core": Object {
                                          "border": "#dbdbdb",
                                          "borderBright": "#f4f5f5",
                                          "borderLight": "#e4e7e7",
                                          "borderLighter": "#eceeee",
                                          "borderMedium": "#c4c4c4",
                                          "gray": "#484848",
                                          "grayLight": "#82888a",
                                          "grayLighter": "#cacccd",
                                          "grayLightest": "#f2f2f2",
                                          "primary": "#00a699",
                                          "primaryShade_1": "#33dacd",
                                          "primaryShade_2": "#66e2da",
                                          "primaryShade_3": "#80e8e0",
                                          "primaryShade_4": "#b2f1ec",
                                          "primary_dark": "#008489",
                                          "secondary": "#007a87",
                                          "white": "#fff",
                                          "yellow": "#ffe8bc",
                                          "yellow_dark": "#ffce71",
                                        },
                                        "disabled": "#f2f2f2",
                                        "highlighted": Object {
                                          "backgroundColor": "#ffe8bc",
                                          "backgroundColor_active": "#ffce71",
                                          "backgroundColor_hover": "#ffce71",
                                          "color": "#484848",
                                          "color_active": "#484848",
                                          "color_hover": "#484848",
                                        },
                                        "hoveredSpan": Object {
                                          "backgroundColor": "#b2f1ec",
                                          "backgroundColor_active": "#80e8e0",
                                          "backgroundColor_hover": "#b2f1ec",
                                          "borderColor": "#80e8e0",
                                          "borderColor_active": "#80e8e0",
                                          "borderColor_hover": "#80e8e0",
                                          "color": "#007a87",
                                          "color_active": "#007a87",
                                          "color_hover": "#007a87",
                                        },
                                        "minimumNights": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "borderColor": "#eceeee",
                                          "color": "#cacccd",
                                          "color_active": "#cacccd",
                                          "color_hover": "#cacccd",
                                        },
                                        "outside": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "color": "#484848",
                                          "color_active": "#484848",
                                          "color_hover": "#484848",
                                        },
                                        "placeholderText": "#757575",
                                        "selected": Object {
                                          "backgroundColor": "#00a699",
                                          "backgroundColor_active": "#00a699",
                                          "backgroundColor_hover": "#00a699",
                                          "borderColor": "#00a699",
                                          "borderColor_active": "#00a699",
                                          "borderColor_hover": "#00a699",
                                          "color": "#fff",
                                          "color_active": "#fff",
                                          "color_hover": "#fff",
                                        },
                                        "selectedSpan": Object {
                                          "backgroundColor": "#66e2da",
                                          "backgroundColor_active": "#33dacd",
                                          "backgroundColor_hover": "#33dacd",
                                          "borderColor": "#33dacd",
                                          "borderColor_active": "#00a699",
                                          "borderColor_hover": "#00a699",
                                          "color": "#fff",
                                          "color_active": "#fff",
                                          "color_hover": "#fff",
                                        },
                                        "text": "#484848",
                                        "textDisabled": "#dbdbdb",
                                        "textFocused": "#007a87",
                                      },
                                      "font": Object {
                                        "captionSize": 18,
                                        "input": Object {
                                          "letterSpacing_small": "0.2px",
                                          "lineHeight": "24px",
                                          "lineHeight_small": "18px",
                                          "size": 19,
                                          "size_small": 15,
                                          "styleDisabled": "italic",
                                          "weight": 200,
                                        },
                                        "size": 14,
                                      },
                                      "noScrollBarOnVerticalScrollable": false,
                                      "sizing": Object {
                                        "arrowWidth": 24,
                                        "inputWidth": 130,
                                        "inputWidth_small": 97,
                                      },
                                      "spacing": Object {
                                        "captionPaddingBottom": 37,
                                        "captionPaddingTop": 22,
                                        "dayPickerHorizontalPadding": 9,
                                        "displayTextPaddingBottom": 9,
                                        "displayTextPaddingBottom_small": 5,
                                        "displayTextPaddingHorizontal": undefined,
                                        "displayTextPaddingHorizontal_small": undefined,
                                        "displayTextPaddingLeft": 11,
                                        "displayTextPaddingLeft_small": 7,
                                        "displayTextPaddingRight": 11,
                                        "displayTextPaddingRight_small": 7,
                                        "displayTextPaddingTop": 11,
                                        "displayTextPaddingTop_small": 7,
                                        "displayTextPaddingVertical": undefined,
                                        "displayTextPaddingVertical_small": undefined,
                                        "inputPadding": 0,
                                      },
                                      "zIndex": 0,
                                    },
                                  }
                                }
                                verticalSpacing={22}
                              >
                                <div
                                  className="DateRangePickerInput DateRangePickerInput_1 DateRangePickerInput__withBorder DateRangePickerInput__withBorder_2"
                                >
                                  <withStyles(DateInput)
                                    block={false}
                                    disabled={false}
                                    displayValue={null}
                                    focused={false}
                                    id="calendar_from_date"
                                    isFocused={false}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDownArrowDown={[Function]}
                                    onKeyDownQuestionMark={[Function]}
                                    onKeyDownShiftTab={[Function]}
                                    onKeyDownTab={[Function]}
                                    openDirection="down"
                                    placeholder="From Date"
                                    readOnly={false}
                                    regular={false}
                                    required={false}
                                    screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                    showCaret={true}
                                    small={false}
                                    verticalSpacing={22}
                                  >
                                    <DateInput
                                      block={false}
                                      css={[Function]}
                                      disabled={false}
                                      displayValue={null}
                                      focused={false}
                                      id="calendar_from_date"
                                      isFocused={false}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDownArrowDown={[Function]}
                                      onKeyDownQuestionMark={[Function]}
                                      onKeyDownShiftTab={[Function]}
                                      onKeyDownTab={[Function]}
                                      openDirection="down"
                                      placeholder="From Date"
                                      readOnly={false}
                                      regular={false}
                                      required={false}
                                      screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                      showCaret={true}
                                      small={false}
                                      styles={
                                        Object {
                                          "DateInput": "DateInput",
                                          "DateInput__block": "DateInput__block",
                                          "DateInput__disabled": "DateInput__disabled",
                                          "DateInput__small": "DateInput__small",
                                          "DateInput_fang": "DateInput_fang",
                                          "DateInput_fangShape": "DateInput_fangShape",
                                          "DateInput_fangStroke": "DateInput_fangStroke",
                                          "DateInput_input": "DateInput_input",
                                          "DateInput_input__disabled": "DateInput_input__disabled",
                                          "DateInput_input__focused": "DateInput_input__focused",
                                          "DateInput_input__readOnly": "DateInput_input__readOnly",
                                          "DateInput_input__regular": "DateInput_input__regular",
                                          "DateInput_input__small": "DateInput_input__small",
                                          "DateInput_screenReaderMessage": "DateInput_screenReaderMessage",
                                        }
                                      }
                                      theme={
                                        Object {
                                          "reactDates": Object {
                                            "border": Object {
                                              "input": Object {
                                                "border": 0,
                                                "borderBottom": "2px solid transparent",
                                                "borderBottomFocused": "2px solid #008489",
                                                "borderFocused": 0,
                                                "borderLeft": 0,
                                                "borderLeftFocused": 0,
                                                "borderRadius": 0,
                                                "borderRight": 0,
                                                "borderRightFocused": 0,
                                                "borderTop": 0,
                                                "borderTopFocused": 0,
                                                "outlineFocused": 0,
                                              },
                                              "pickerInput": Object {
                                                "borderRadius": 2,
                                                "borderStyle": "solid",
                                                "borderWidth": 1,
                                              },
                                            },
                                            "color": Object {
                                              "background": "#fff",
                                              "backgroundDark": "#f2f2f2",
                                              "backgroundFocused": "#fff",
                                              "blocked_calendar": Object {
                                                "backgroundColor": "#cacccd",
                                                "backgroundColor_active": "#cacccd",
                                                "backgroundColor_hover": "#cacccd",
                                                "borderColor": "#cacccd",
                                                "borderColor_active": "#cacccd",
                                                "borderColor_hover": "#cacccd",
                                                "color": "#82888a",
                                                "color_active": "#82888a",
                                                "color_hover": "#82888a",
                                              },
                                              "blocked_out_of_range": Object {
                                                "backgroundColor": "#fff",
                                                "backgroundColor_active": "#fff",
                                                "backgroundColor_hover": "#fff",
                                                "borderColor": "#e4e7e7",
                                                "borderColor_active": "#e4e7e7",
                                                "borderColor_hover": "#e4e7e7",
                                                "color": "#cacccd",
                                                "color_active": "#cacccd",
                                                "color_hover": "#cacccd",
                                              },
                                              "border": "rgb(219, 219, 219)",
                                              "core": Object {
                                                "border": "#dbdbdb",
                                                "borderBright": "#f4f5f5",
                                                "borderLight": "#e4e7e7",
                                                "borderLighter": "#eceeee",
                                                "borderMedium": "#c4c4c4",
                                                "gray": "#484848",
                                                "grayLight": "#82888a",
                                                "grayLighter": "#cacccd",
                                                "grayLightest": "#f2f2f2",
                                                "primary": "#00a699",
                                                "primaryShade_1": "#33dacd",
                                                "primaryShade_2": "#66e2da",
                                                "primaryShade_3": "#80e8e0",
                                                "primaryShade_4": "#b2f1ec",
                                                "primary_dark": "#008489",
                                                "secondary": "#007a87",
                                                "white": "#fff",
                                                "yellow": "#ffe8bc",
                                                "yellow_dark": "#ffce71",
                                              },
                                              "disabled": "#f2f2f2",
                                              "highlighted": Object {
                                                "backgroundColor": "#ffe8bc",
                                                "backgroundColor_active": "#ffce71",
                                                "backgroundColor_hover": "#ffce71",
                                                "color": "#484848",
                                                "color_active": "#484848",
                                                "color_hover": "#484848",
                                              },
                                              "hoveredSpan": Object {
                                                "backgroundColor": "#b2f1ec",
                                                "backgroundColor_active": "#80e8e0",
                                                "backgroundColor_hover": "#b2f1ec",
                                                "borderColor": "#80e8e0",
                                                "borderColor_active": "#80e8e0",
                                                "borderColor_hover": "#80e8e0",
                                                "color": "#007a87",
                                                "color_active": "#007a87",
                                                "color_hover": "#007a87",
                                              },
                                              "minimumNights": Object {
                                                "backgroundColor": "#fff",
                                                "backgroundColor_active": "#fff",
                                                "backgroundColor_hover": "#fff",
                                                "borderColor": "#eceeee",
                                                "color": "#cacccd",
                                                "color_active": "#cacccd",
                                                "color_hover": "#cacccd",
                                              },
                                              "outside": Object {
                                                "backgroundColor": "#fff",
                                                "backgroundColor_active": "#fff",
                                                "backgroundColor_hover": "#fff",
                                                "color": "#484848",
                                                "color_active": "#484848",
                                                "color_hover": "#484848",
                                              },
                                              "placeholderText": "#757575",
                                              "selected": Object {
                                                "backgroundColor": "#00a699",
                                                "backgroundColor_active": "#00a699",
                                                "backgroundColor_hover": "#00a699",
                                                "borderColor": "#00a699",
                                                "borderColor_active": "#00a699",
                                                "borderColor_hover": "#00a699",
                                                "color": "#fff",
                                                "color_active": "#fff",
                                                "color_hover": "#fff",
                                              },
                                              "selectedSpan": Object {
                                                "backgroundColor": "#66e2da",
                                                "backgroundColor_active": "#33dacd",
                                                "backgroundColor_hover": "#33dacd",
                                                "borderColor": "#33dacd",
                                                "borderColor_active": "#00a699",
                                                "borderColor_hover": "#00a699",
                                                "color": "#fff",
                                                "color_active": "#fff",
                                                "color_hover": "#fff",
                                              },
                                              "text": "#484848",
                                              "textDisabled": "#dbdbdb",
                                              "textFocused": "#007a87",
                                            },
                                            "font": Object {
                                              "captionSize": 18,
                                              "input": Object {
                                                "letterSpacing_small": "0.2px",
                                                "lineHeight": "24px",
                                                "lineHeight_small": "18px",
                                                "size": 19,
                                                "size_small": 15,
                                                "styleDisabled": "italic",
                                                "weight": 200,
                                              },
                                              "size": 14,
                                            },
                                            "noScrollBarOnVerticalScrollable": false,
                                            "sizing": Object {
                                              "arrowWidth": 24,
                                              "inputWidth": 130,
                                              "inputWidth_small": 97,
                                            },
                                            "spacing": Object {
                                              "captionPaddingBottom": 37,
                                              "captionPaddingTop": 22,
                                              "dayPickerHorizontalPadding": 9,
                                              "displayTextPaddingBottom": 9,
                                              "displayTextPaddingBottom_small": 5,
                                              "displayTextPaddingHorizontal": undefined,
                                              "displayTextPaddingHorizontal_small": undefined,
                                              "displayTextPaddingLeft": 11,
                                              "displayTextPaddingLeft_small": 7,
                                              "displayTextPaddingRight": 11,
                                              "displayTextPaddingRight_small": 7,
                                              "displayTextPaddingTop": 11,
                                              "displayTextPaddingTop_small": 7,
                                              "displayTextPaddingVertical": undefined,
                                              "displayTextPaddingVertical_small": undefined,
                                              "inputPadding": 0,
                                            },
                                            "zIndex": 0,
                                          },
                                        }
                                      }
                                      verticalSpacing={22}
                                    >
                                      <div
                                        className="DateInput DateInput_1"
                                      >
                                        <input
                                          aria-describedby="DateInput__screen-reader-message-calendar_from_date"
                                          aria-label="From Date"
                                          autoComplete="off"
                                          className="DateInput_input DateInput_input_1"
                                          disabled={false}
                                          id="calendar_from_date"
                                          name="calendar_from_date"
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="From Date"
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                        <p
                                          className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                                          id="DateInput__screen-reader-message-calendar_from_date"
                                        >
                                          Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
                                        </p>
                                      </div>
                                    </DateInput>
                                  </withStyles(DateInput)>
                                  <div
                                    aria-hidden="true"
                                    className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
                                    role="presentation"
                                  >
                                    <ForwardRef(ArrowForwardIcon)
                                      className="icon-small"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="icon-small"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="icon-small"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root icon-small"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(ArrowForwardIcon)>
                                  </div>
                                  <withStyles(DateInput)
                                    block={false}
                                    disabled={false}
                                    displayValue={null}
                                    focused={false}
                                    id="calendar_to_date"
                                    isFocused={false}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDownArrowDown={[Function]}
                                    onKeyDownQuestionMark={[Function]}
                                    onKeyDownShiftTab={[Function]}
                                    onKeyDownTab={[Function]}
                                    openDirection="down"
                                    placeholder="To Date"
                                    readOnly={false}
                                    regular={false}
                                    required={false}
                                    screenReaderMessage="Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                    showCaret={true}
                                    small={false}
                                    verticalSpacing={22}
                                  >
                                    <DateInput
                                      block={false}
                                      css={[Function]}
                                      disabled={false}
                                      displayValue={null}
                                      focused={false}
                                      id="calendar_to_date"
                                      isFocused={false}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDownArrowDown={[Function]}
                                      onKeyDownQuestionMark={[Function]}
                                      onKeyDownShiftTab={[Function]}
                                      onKeyDownTab={[Function]}
                                      openDirection="down"
                                      placeholder="To Date"
                                      readOnly={false}
                                      regular={false}
                                      required={false}
                                      screenReaderMessage="Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                      showCaret={true}
                                      small={false}
                                      styles={
                                        Object {
                                          "DateInput": "DateInput",
                                          "DateInput__block": "DateInput__block",
                                          "DateInput__disabled": "DateInput__disabled",
                                          "DateInput__small": "DateInput__small",
                                          "DateInput_fang": "DateInput_fang",
                                          "DateInput_fangShape": "DateInput_fangShape",
                                          "DateInput_fangStroke": "DateInput_fangStroke",
                                          "DateInput_input": "DateInput_input",
                                          "DateInput_input__disabled": "DateInput_input__disabled",
                                          "DateInput_input__focused": "DateInput_input__focused",
                                          "DateInput_input__readOnly": "DateInput_input__readOnly",
                                          "DateInput_input__regular": "DateInput_input__regular",
                                          "DateInput_input__small": "DateInput_input__small",
                                          "DateInput_screenReaderMessage": "DateInput_screenReaderMessage",
                                        }
                                      }
                                      theme={
                                        Object {
                                          "reactDates": Object {
                                            "border": Object {
                                              "input": Object {
                                                "border": 0,
                                                "borderBottom": "2px solid transparent",
                                                "borderBottomFocused": "2px solid #008489",
                                                "borderFocused": 0,
                                                "borderLeft": 0,
                                                "borderLeftFocused": 0,
                                                "borderRadius": 0,
                                                "borderRight": 0,
                                                "borderRightFocused": 0,
                                                "borderTop": 0,
                                                "borderTopFocused": 0,
                                                "outlineFocused": 0,
                                              },
                                              "pickerInput": Object {
                                                "borderRadius": 2,
                                                "borderStyle": "solid",
                                                "borderWidth": 1,
                                              },
                                            },
                                            "color": Object {
                                              "background": "#fff",
                                              "backgroundDark": "#f2f2f2",
                                              "backgroundFocused": "#fff",
                                              "blocked_calendar": Object {
                                                "backgroundColor": "#cacccd",
                                                "backgroundColor_active": "#cacccd",
                                                "backgroundColor_hover": "#cacccd",
                                                "borderColor": "#cacccd",
                                                "borderColor_active": "#cacccd",
                                                "borderColor_hover": "#cacccd",
                                                "color": "#82888a",
                                                "color_active": "#82888a",
                                                "color_hover": "#82888a",
                                              },
                                              "blocked_out_of_range": Object {
                                                "backgroundColor": "#fff",
                                                "backgroundColor_active": "#fff",
                                                "backgroundColor_hover": "#fff",
                                                "borderColor": "#e4e7e7",
                                                "borderColor_active": "#e4e7e7",
                                                "borderColor_hover": "#e4e7e7",
                                                "color": "#cacccd",
                                                "color_active": "#cacccd",
                                                "color_hover": "#cacccd",
                                              },
                                              "border": "rgb(219, 219, 219)",
                                              "core": Object {
                                                "border": "#dbdbdb",
                                                "borderBright": "#f4f5f5",
                                                "borderLight": "#e4e7e7",
                                                "borderLighter": "#eceeee",
                                                "borderMedium": "#c4c4c4",
                                                "gray": "#484848",
                                                "grayLight": "#82888a",
                                                "grayLighter": "#cacccd",
                                                "grayLightest": "#f2f2f2",
                                                "primary": "#00a699",
                                                "primaryShade_1": "#33dacd",
                                                "primaryShade_2": "#66e2da",
                                                "primaryShade_3": "#80e8e0",
                                                "primaryShade_4": "#b2f1ec",
                                                "primary_dark": "#008489",
                                                "secondary": "#007a87",
                                                "white": "#fff",
                                                "yellow": "#ffe8bc",
                                                "yellow_dark": "#ffce71",
                                              },
                                              "disabled": "#f2f2f2",
                                              "highlighted": Object {
                                                "backgroundColor": "#ffe8bc",
                                                "backgroundColor_active": "#ffce71",
                                                "backgroundColor_hover": "#ffce71",
                                                "color": "#484848",
                                                "color_active": "#484848",
                                                "color_hover": "#484848",
                                              },
                                              "hoveredSpan": Object {
                                                "backgroundColor": "#b2f1ec",
                                                "backgroundColor_active": "#80e8e0",
                                                "backgroundColor_hover": "#b2f1ec",
                                                "borderColor": "#80e8e0",
                                                "borderColor_active": "#80e8e0",
                                                "borderColor_hover": "#80e8e0",
                                                "color": "#007a87",
                                                "color_active": "#007a87",
                                                "color_hover": "#007a87",
                                              },
                                              "minimumNights": Object {
                                                "backgroundColor": "#fff",
                                                "backgroundColor_active": "#fff",
                                                "backgroundColor_hover": "#fff",
                                                "borderColor": "#eceeee",
                                                "color": "#cacccd",
                                                "color_active": "#cacccd",
                                                "color_hover": "#cacccd",
                                              },
                                              "outside": Object {
                                                "backgroundColor": "#fff",
                                                "backgroundColor_active": "#fff",
                                                "backgroundColor_hover": "#fff",
                                                "color": "#484848",
                                                "color_active": "#484848",
                                                "color_hover": "#484848",
                                              },
                                              "placeholderText": "#757575",
                                              "selected": Object {
                                                "backgroundColor": "#00a699",
                                                "backgroundColor_active": "#00a699",
                                                "backgroundColor_hover": "#00a699",
                                                "borderColor": "#00a699",
                                                "borderColor_active": "#00a699",
                                                "borderColor_hover": "#00a699",
                                                "color": "#fff",
                                                "color_active": "#fff",
                                                "color_hover": "#fff",
                                              },
                                              "selectedSpan": Object {
                                                "backgroundColor": "#66e2da",
                                                "backgroundColor_active": "#33dacd",
                                                "backgroundColor_hover": "#33dacd",
                                                "borderColor": "#33dacd",
                                                "borderColor_active": "#00a699",
                                                "borderColor_hover": "#00a699",
                                                "color": "#fff",
                                                "color_active": "#fff",
                                                "color_hover": "#fff",
                                              },
                                              "text": "#484848",
                                              "textDisabled": "#dbdbdb",
                                              "textFocused": "#007a87",
                                            },
                                            "font": Object {
                                              "captionSize": 18,
                                              "input": Object {
                                                "letterSpacing_small": "0.2px",
                                                "lineHeight": "24px",
                                                "lineHeight_small": "18px",
                                                "size": 19,
                                                "size_small": 15,
                                                "styleDisabled": "italic",
                                                "weight": 200,
                                              },
                                              "size": 14,
                                            },
                                            "noScrollBarOnVerticalScrollable": false,
                                            "sizing": Object {
                                              "arrowWidth": 24,
                                              "inputWidth": 130,
                                              "inputWidth_small": 97,
                                            },
                                            "spacing": Object {
                                              "captionPaddingBottom": 37,
                                              "captionPaddingTop": 22,
                                              "dayPickerHorizontalPadding": 9,
                                              "displayTextPaddingBottom": 9,
                                              "displayTextPaddingBottom_small": 5,
                                              "displayTextPaddingHorizontal": undefined,
                                              "displayTextPaddingHorizontal_small": undefined,
                                              "displayTextPaddingLeft": 11,
                                              "displayTextPaddingLeft_small": 7,
                                              "displayTextPaddingRight": 11,
                                              "displayTextPaddingRight_small": 7,
                                              "displayTextPaddingTop": 11,
                                              "displayTextPaddingTop_small": 7,
                                              "displayTextPaddingVertical": undefined,
                                              "displayTextPaddingVertical_small": undefined,
                                              "inputPadding": 0,
                                            },
                                            "zIndex": 0,
                                          },
                                        }
                                      }
                                      verticalSpacing={22}
                                    >
                                      <div
                                        className="DateInput DateInput_1"
                                      >
                                        <input
                                          aria-describedby="DateInput__screen-reader-message-calendar_to_date"
                                          aria-label="To Date"
                                          autoComplete="off"
                                          className="DateInput_input DateInput_input_1"
                                          disabled={false}
                                          id="calendar_to_date"
                                          name="calendar_to_date"
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="To Date"
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                        <p
                                          className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                                          id="DateInput__screen-reader-message-calendar_to_date"
                                        >
                                          Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
                                        </p>
                                      </div>
                                    </DateInput>
                                  </withStyles(DateInput)>
                                </div>
                              </DateRangePickerInput>
                            </withStyles(DateRangePickerInput)>
                          </DateRangePickerInputController>
                        </div>
                      </OutsideClickHandler>
                    </div>
                  </DateRangePicker>
                </withStyles(DateRangePicker)>
                <V
                  message=""
                >
                  <div
                    className="_2fvTK"
                  />
                </V>
              </div>
            </Z>
          </div>
          <div
            className="buttons"
          >
            <P
              label="CLEAR"
              onClick={[Function]}
              style={
                Object {
                  "margin": "24px 0",
                }
              }
            >
              <div
                className="_1lqJX _3kQFd _zeH0N undefined"
                onClick={[Function]}
                onKeyPress={[Function]}
                style={
                  Object {
                    "height": 40,
                    "lineHeight": "40px",
                    "margin": "24px 0",
                  }
                }
                tabIndex={-1}
                title=""
              >
                <span>
                  CLEAR
                </span>
              </div>
            </P>
          </div>
        </form>
      </FiltersBar>
    </ApolloProvider>
  </MockedProvider>
</Wrapper>
`;
