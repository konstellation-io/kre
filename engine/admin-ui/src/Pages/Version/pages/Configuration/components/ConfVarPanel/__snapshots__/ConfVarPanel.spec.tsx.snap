// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfVarPanel matches snapshot 1`] = `
<Component>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ConfVarPanel
        closePanel={[Function]}
        varPanel={
          Object {
            "key": "key",
            "type": "FILE",
            "value": "some value",
          }
        }
      >
        <HotKeysEnabled
          className="show"
          handlers={
            Object {
              "CLOSE_PANEL": [Function],
            }
          }
          innerRef={
            Object {
              "current": <div
                class="show"
                tabindex="-1"
              >
                <div
                  class="bg"
                />
                <div
                  class="container"
                >
                  <div
                    class="head"
                  >
                    <div
                      class="header"
                    >
                      <span>
                        Variable details
                      </span>
                      <div
                        class="_1lqJX _3kQFd _zeH0N _3Z9XS undefined"
                        style="height: 40px; line-height: 40px;"
                        tabindex="-1"
                        title=""
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root icon-small"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                          />
                        </svg>
                        <span />
                      </div>
                    </div>
                    <div
                      class="varType"
                    >
                      <svg
                        aria-hidden="true"
                        class="MuiSvgIcon-root icon-regular"
                        focusable="false"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"
                        />
                      </svg>
                      File
                    </div>
                    <div
                      class="varKey"
                    >
                      <svg
                        aria-hidden="true"
                        class="MuiSvgIcon-root icon-regular"
                        focusable="false"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
                        />
                      </svg>
                      key
                    </div>
                  </div>
                  <div
                    class="body"
                  >
                    <div
                      class="title"
                    >
                      SOURCE CODE
                    </div>
                    <div
                      class="varValue"
                    >
                      <pre>
                        some value
                      </pre>
                    </div>
                  </div>
                </div>
              </div>,
            }
          }
          keyMap={
            Object {
              "CLOSE_LOGS": "esc",
              "CLOSE_PANEL": "esc",
              "OPEN_LOGS": "l",
            }
          }
        >
          <HotKeysWrapper
            className="show"
            hotKeys={
              Object {
                "onBlur": [Function],
                "onFocus": [Function],
                "onKeyDown": [Function],
                "onKeyPress": [Function],
                "onKeyUp": [Function],
                "tabIndex": "-1",
              }
            }
            innerRef={
              Object {
                "current": <div
                  class="show"
                  tabindex="-1"
                >
                  <div
                    class="bg"
                  />
                  <div
                    class="container"
                  >
                    <div
                      class="head"
                    >
                      <div
                        class="header"
                      >
                        <span>
                          Variable details
                        </span>
                        <div
                          class="_1lqJX _3kQFd _zeH0N _3Z9XS undefined"
                          style="height: 40px; line-height: 40px;"
                          tabindex="-1"
                          title=""
                        >
                          <svg
                            aria-hidden="true"
                            class="MuiSvgIcon-root icon-small"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                            />
                          </svg>
                          <span />
                        </div>
                      </div>
                      <div
                        class="varType"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root icon-regular"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"
                          />
                        </svg>
                        File
                      </div>
                      <div
                        class="varKey"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root icon-regular"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
                          />
                        </svg>
                        key
                      </div>
                    </div>
                    <div
                      class="body"
                    >
                      <div
                        class="title"
                      >
                        SOURCE CODE
                      </div>
                      <div
                        class="varValue"
                      >
                        <pre>
                          some value
                        </pre>
                      </div>
                    </div>
                  </div>
                </div>,
              }
            }
          >
            <div
              className="show"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPress={[Function]}
              onKeyUp={[Function]}
              tabIndex="-1"
            >
              <div
                className="bg"
                onClick={[Function]}
              />
              <div
                className="container"
              >
                <div
                  className="head"
                >
                  <div
                    className="header"
                  >
                    <span>
                      Variable details
                    </span>
                    <P
                      Icon={
                        Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        }
                      }
                      label=""
                      onClick={[Function]}
                    >
                      <div
                        className="_1lqJX _3kQFd _zeH0N _3Z9XS undefined"
                        onClick={[Function]}
                        onKeyPress={[Function]}
                        style={
                          Object {
                            "height": 40,
                            "lineHeight": "40px",
                          }
                        }
                        tabIndex={-1}
                        title=""
                      >
                        <ForwardRef(CloseIcon)
                          className="icon-small"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="icon-small"
                          >
                            <ForwardRef(SvgIcon)
                              className="icon-small"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden={true}
                                className="MuiSvgIcon-root icon-small"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef(CloseIcon)>
                        <span />
                      </div>
                    </P>
                  </div>
                  <div
                    className="varType"
                  >
                    <ForwardRef(InsertDriveFileIcon)
                      className="icon-regular"
                    >
                      <WithStyles(ForwardRef(SvgIcon))
                        className="icon-regular"
                      >
                        <ForwardRef(SvgIcon)
                          className="icon-regular"
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root icon-regular"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(InsertDriveFileIcon)>
                    File
                  </div>
                  <div
                    className="varKey"
                  >
                    <ForwardRef(VpnKeyIcon)
                      className="icon-regular"
                    >
                      <WithStyles(ForwardRef(SvgIcon))
                        className="icon-regular"
                      >
                        <ForwardRef(SvgIcon)
                          className="icon-regular"
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root icon-regular"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(VpnKeyIcon)>
                    key
                  </div>
                </div>
                <div
                  className="body"
                >
                  <div
                    className="title"
                  >
                    SOURCE CODE
                  </div>
                  <div
                    className="varValue"
                  >
                    <pre>
                      some value
                    </pre>
                  </div>
                </div>
              </div>
            </div>
          </HotKeysWrapper>
        </HotKeysEnabled>
      </ConfVarPanel>
    </Router>
  </BrowserRouter>
</Component>
`;
