// Code generated by MockGen. DO NOT EDIT.
// Source: nats.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/konstellation-io/kre/engine/admin-api/domain/entity"
)

// MockNatsManagerService is a mock of NatsManagerService interface.
type MockNatsManagerService struct {
	ctrl     *gomock.Controller
	recorder *MockNatsManagerServiceMockRecorder
}

// MockNatsManagerServiceMockRecorder is the mock recorder for MockNatsManagerService.
type MockNatsManagerServiceMockRecorder struct {
	mock *MockNatsManagerService
}

// NewMockNatsManagerService creates a new mock instance.
func NewMockNatsManagerService(ctrl *gomock.Controller) *MockNatsManagerService {
	mock := &MockNatsManagerService{ctrl: ctrl}
	mock.recorder = &MockNatsManagerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNatsManagerService) EXPECT() *MockNatsManagerServiceMockRecorder {
	return m.recorder
}

// CreateStreams mocks base method.
func (m *MockNatsManagerService) CreateStreams(ctx context.Context, runtimeID string, version *entity.Version) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStreams", ctx, runtimeID, version)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateStreams indicates an expected call of CreateStreams.
func (mr *MockNatsManagerServiceMockRecorder) CreateStreams(ctx, runtimeID, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStreams", reflect.TypeOf((*MockNatsManagerService)(nil).CreateStreams), ctx, runtimeID, version)
}

// DeleteStreams mocks base method.
func (m *MockNatsManagerService) DeleteStreams(ctx context.Context, runtimeID string, version *entity.Version) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStreams", ctx, runtimeID, version)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStreams indicates an expected call of DeleteStreams.
func (mr *MockNatsManagerServiceMockRecorder) DeleteStreams(ctx, runtimeID, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStreams", reflect.TypeOf((*MockNatsManagerService)(nil).DeleteStreams), ctx, runtimeID, version)
}

// GetVersionNatsConfig mocks base method.
func (m *MockNatsManagerService) GetVersionNatsConfig(ctx context.Context, runtimeID string, version *entity.Version) (entity.VersionStreamConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVersionNatsConfig", ctx, runtimeID, version)
	ret0, _ := ret[0].(entity.VersionStreamConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersionNatsConfig indicates an expected call of GetVersionNatsConfig.
func (mr *MockNatsManagerServiceMockRecorder) GetVersionNatsConfig(ctx, runtimeID, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVersionNatsConfig", reflect.TypeOf((*MockNatsManagerService)(nil).GetVersionNatsConfig), ctx, runtimeID, version)
}
