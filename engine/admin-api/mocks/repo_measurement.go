// Code generated by MockGen. DO NOT EDIT.
// Source: measurement.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMeasurementRepo is a mock of MeasurementRepo interface.
type MockMeasurementRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMeasurementRepoMockRecorder
}

// MockMeasurementRepoMockRecorder is the mock recorder for MockMeasurementRepo.
type MockMeasurementRepoMockRecorder struct {
	mock *MockMeasurementRepo
}

// NewMockMeasurementRepo creates a new mock instance.
func NewMockMeasurementRepo(ctrl *gomock.Controller) *MockMeasurementRepo {
	mock := &MockMeasurementRepo{ctrl: ctrl}
	mock.recorder = &MockMeasurementRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMeasurementRepo) EXPECT() *MockMeasurementRepoMockRecorder {
	return m.recorder
}

// CreateDatabase mocks base method.
func (m *MockMeasurementRepo) CreateDatabase(runtimeID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDatabase", runtimeID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDatabase indicates an expected call of CreateDatabase.
func (mr *MockMeasurementRepoMockRecorder) CreateDatabase(runtimeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDatabase", reflect.TypeOf((*MockMeasurementRepo)(nil).CreateDatabase), runtimeID)
}
