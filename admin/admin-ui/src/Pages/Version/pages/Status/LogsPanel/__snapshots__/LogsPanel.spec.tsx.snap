// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Logs matches snapshot 1`] = `
<Fragment>
  <div
    className="container"
  >
    <Header
      fullScreen={false}
      opened={false}
      toggleFullScreen={[Function]}
      togglePanel={[Function]}
    />
    <TabContainer
      activeTabId=""
      contextMenuActions={
        Array [
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "ControlPointDuplicateIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "text": "duplicate",
          },
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "TabIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "text": "open in a new tab",
          },
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "ClearAllIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "disabled": true,
            "text": "close others",
          },
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "CloseIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "text": "close",
          },
        ]
      }
      onTabClick={[Function]}
      tabs={
        Array [
          Object {
            "nodeId": "nodeIdMock",
            "nodeName": "nodeNameMock",
            "runtimeId": "runtimeIdMock",
            "uniqueId": "foo",
          },
        ]
      }
    />
    <div
      className="content inactiveTab"
      key="foo"
    >
      <LogsTab
        runtimeId="runtimeIdMock"
        uniqueId="foo"
      />
    </div>
  </div>
  <div
    className="shield"
    onClick={[Function]}
  />
</Fragment>
`;

exports[`Logs should be empty when there is no node 1`] = `
<Fragment>
  <div
    className="container hidden"
  >
    <Header
      fullScreen={false}
      opened={false}
      toggleFullScreen={[Function]}
      togglePanel={[Function]}
    />
    <TabContainer
      activeTabId=""
      contextMenuActions={
        Array [
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "ControlPointDuplicateIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "text": "duplicate",
          },
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "TabIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "text": "open in a new tab",
          },
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "ClearAllIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "disabled": true,
            "text": "close others",
          },
          Object {
            "Icon": Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "displayName": "CloseIcon",
              "muiName": "SvgIcon",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            "callToAction": [Function],
            "text": "close",
          },
        ]
      }
      onTabClick={[Function]}
      tabs={Array []}
    />
  </div>
  <div
    className="shield"
    onClick={[Function]}
  />
</Fragment>
`;
