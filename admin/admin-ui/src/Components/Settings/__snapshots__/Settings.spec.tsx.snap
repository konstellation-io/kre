// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Settings matches snapshot 1`] = `
<Wrapper>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Memo(Settings)
        label="some label"
      >
        <div
          className="container"
          data-testid="settingsContainer"
          onClick={[Function]}
        >
          <div
            className="label"
            data-testid="settings-label"
          >
            some label
          </div>
          <div
            className="options"
            data-testid="settingsContent"
            style={
              Object {
                "maxHeight": 0,
              }
            }
          >
            <P
              Icon={
                Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "displayName": "VerifiedUserIcon",
                  "muiName": "SvgIcon",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                }
              }
              align="left"
              key="buttonSettings"
              label="SETTINGS"
              style={
                Object {
                  "paddingLeft": "20%",
                }
              }
              to="/settings"
            >
              <Link
                data-testid="buttonLink"
                to="/settings"
              >
                <LinkAnchor
                  data-testid="buttonLink"
                  href="/settings"
                  navigate={[Function]}
                >
                  <a
                    data-testid="buttonLink"
                    href="/settings"
                    onClick={[Function]}
                  >
                    <div
                      className="_1lqJX _3ZftH _zeH0N undefined"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      style={
                        Object {
                          "height": 40,
                          "lineHeight": "40px",
                          "paddingLeft": "20%",
                        }
                      }
                      tabIndex={-1}
                      title=""
                    >
                      <ForwardRef
                        className="icon-small"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          className="icon-small"
                        >
                          <ForwardRef(SvgIcon)
                            className="icon-small"
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root icon-small"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                      <span>
                        SETTINGS
                      </span>
                    </div>
                  </a>
                </LinkAnchor>
              </Link>
            </P>
            <P
              Icon={
                Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "displayName": "SupervisorAccountIcon",
                  "muiName": "SvgIcon",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                }
              }
              align="left"
              key="buttonUsers"
              label="USERS"
              style={
                Object {
                  "paddingLeft": "20%",
                }
              }
              to="/users"
            >
              <Link
                data-testid="buttonLink"
                to="/users"
              >
                <LinkAnchor
                  data-testid="buttonLink"
                  href="/users"
                  navigate={[Function]}
                >
                  <a
                    data-testid="buttonLink"
                    href="/users"
                    onClick={[Function]}
                  >
                    <div
                      className="_1lqJX _3ZftH _zeH0N undefined"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      style={
                        Object {
                          "height": 40,
                          "lineHeight": "40px",
                          "paddingLeft": "20%",
                        }
                      }
                      tabIndex={-1}
                      title=""
                    >
                      <ForwardRef
                        className="icon-small"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          className="icon-small"
                        >
                          <ForwardRef(SvgIcon)
                            className="icon-small"
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root icon-small"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                      <span>
                        USERS
                      </span>
                    </div>
                  </a>
                </LinkAnchor>
              </Link>
            </P>
            <P
              Icon={
                Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "displayName": "EventNoteIcon",
                  "muiName": "SvgIcon",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                }
              }
              align="left"
              key="buttonAudit"
              label="AUDIT"
              style={
                Object {
                  "paddingLeft": "20%",
                }
              }
              to="/audit"
            >
              <Link
                data-testid="buttonLink"
                to="/audit"
              >
                <LinkAnchor
                  data-testid="buttonLink"
                  href="/audit"
                  navigate={[Function]}
                >
                  <a
                    data-testid="buttonLink"
                    href="/audit"
                    onClick={[Function]}
                  >
                    <div
                      className="_1lqJX _3ZftH _zeH0N undefined"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      style={
                        Object {
                          "height": 40,
                          "lineHeight": "40px",
                          "paddingLeft": "20%",
                        }
                      }
                      tabIndex={-1}
                      title=""
                    >
                      <ForwardRef
                        className="icon-small"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          className="icon-small"
                        >
                          <ForwardRef(SvgIcon)
                            className="icon-small"
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root icon-small"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M17 10H7v2h10v-2zm2-7h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zm-5-5H7v2h7v-2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                      <span>
                        AUDIT
                      </span>
                    </div>
                  </a>
                </LinkAnchor>
              </Link>
            </P>
            <P
              Icon={
                Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "displayName": "PersonIcon",
                  "muiName": "SvgIcon",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                }
              }
              align="left"
              key="buttonProfile"
              label="PROFILE"
              style={
                Object {
                  "paddingLeft": "20%",
                }
              }
              to="/profile"
            >
              <Link
                data-testid="buttonLink"
                to="/profile"
              >
                <LinkAnchor
                  data-testid="buttonLink"
                  href="/profile"
                  navigate={[Function]}
                >
                  <a
                    data-testid="buttonLink"
                    href="/profile"
                    onClick={[Function]}
                  >
                    <div
                      className="_1lqJX _3ZftH _zeH0N undefined"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      style={
                        Object {
                          "height": 40,
                          "lineHeight": "40px",
                          "paddingLeft": "20%",
                        }
                      }
                      tabIndex={-1}
                      title=""
                    >
                      <ForwardRef
                        className="icon-small"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          className="icon-small"
                        >
                          <ForwardRef(SvgIcon)
                            className="icon-small"
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root icon-small"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                      <span>
                        PROFILE
                      </span>
                    </div>
                  </a>
                </LinkAnchor>
              </Link>
            </P>
            <P
              Icon={
                Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "displayName": "ExitToAppIcon",
                  "muiName": "SvgIcon",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                }
              }
              align="left"
              key="buttonLogout"
              label="LOGOUT"
              onClick={[Function]}
              style={
                Object {
                  "paddingLeft": "20%",
                }
              }
            >
              <div
                className="_1lqJX _3ZftH _zeH0N undefined"
                onClick={[Function]}
                onKeyPress={[Function]}
                style={
                  Object {
                    "height": 40,
                    "lineHeight": "40px",
                    "paddingLeft": "20%",
                  }
                }
                tabIndex={-1}
                title=""
              >
                <ForwardRef
                  className="icon-small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    className="icon-small"
                  >
                    <ForwardRef(SvgIcon)
                      className="icon-small"
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                    >
                      <svg
                        aria-hidden={true}
                        className="MuiSvgIcon-root icon-small"
                        focusable="false"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <span>
                  LOGOUT
                </span>
              </div>
            </P>
          </div>
        </div>
      </Memo(Settings)>
    </Router>
  </BrowserRouter>
</Wrapper>
`;
