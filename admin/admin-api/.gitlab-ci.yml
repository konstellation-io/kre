# test-admin-api:
#   stage: test
#   image: golang:1.14
#   script:
#     - cd admin/admin-api
#     - go get -u github.com/jstemmer/go-junit-report
#     - go test ./... -cover -v -coverprofile=admin-api-coverage.out 2>&1 | tee -a report.out
#     - cat report.out | go-junit-report > admin-api-report.xml
#   coverage: /coverage:\s(\d+(?:\.\d+)?%)/
#   artifacts:
#     paths:
#       - admin/admin-api/admin-api-coverage.out
#     reports:
#       junit: admin/admin-api/admin-api-report.xml
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: always
#       changes:
#         - admin/admin-api/**/*

# sonar-admin-api:
#   extends: .sonar-scanner
#   variables:
#     SONAR_TOKEN: $SONAR_TOKEN_ADMIN_API
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/admin/admin-api/.sonar"
#     COMPONENT_PATH: admin/admin-api
#     GIT_DEPTH: "0"
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: always
#       changes:
#         - admin/admin-api/**/*

release-admin-api:
  stage: semantic-release
  image: node:10
  before_script:
    - npm install --prefix admin/admin-api
  script:
    - cd admin/admin-api && npx semantic-release --debug
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
      changes:
        - admin/admin-api/**/*
        - .gitlab-ci.yml

publish-admin-api-image:
  stage: publish-image
  image: docker:19
  services:
    - name: docker:19.03.6-dind
      command: ["--experimental"]

  variables:
    IMAGE_PROJECT_NAME: "konstellation/kre-admin-api"
    DOCKER_USER: $DOCKER_USER
    DOCKER_PASS: $DOCKER_PASS
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    DOCKER_CLI_EXPERIMENTAL: enabled
    BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
    BUILDX_BUILDER: multiarch
    BUILDX_PLATFORM: "linux/amd64,linux/arm64"

  before_script:
    - mkdir -p $HOME/.docker/cli-plugins/
    - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
    - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --driver docker-container --name ${BUILDX_BUILDER} --platform=${BUILDX_PLATFORM}
    - docker buildx inspect --bootstrap ${BUILDX_BUILDER}
    - docker buildx ls
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - TAG=${CI_COMMIT_TAG#admin-api-v}
    - docker buildx build --push --platform ${BUILDX_PLATFORM}
      --tag $IMAGE_PROJECT_NAME:$TAG
      --tag $IMAGE_PROJECT_NAME:latest
      admin/admin-api
  rules:
    - if: '$CI_COMMIT_TAG =~ /^admin-api-v\d*.\d*.\d*$/'
      when: always
