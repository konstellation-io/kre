// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/resourcemetricspb/resourcemetrics.proto

package resourcemetricspb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VersionResourceMetrics struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Cpu                  float64  `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem                  float64  `protobuf:"fixed64,3,opt,name=mem,proto3" json:"mem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResourceMetrics) Reset()         { *m = VersionResourceMetrics{} }
func (m *VersionResourceMetrics) String() string { return proto.CompactTextString(m) }
func (*VersionResourceMetrics) ProtoMessage()    {}
func (*VersionResourceMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_51f2826e78bd2e23, []int{0}
}

func (m *VersionResourceMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResourceMetrics.Unmarshal(m, b)
}
func (m *VersionResourceMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResourceMetrics.Marshal(b, m, deterministic)
}
func (m *VersionResourceMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResourceMetrics.Merge(m, src)
}
func (m *VersionResourceMetrics) XXX_Size() int {
	return xxx_messageInfo_VersionResourceMetrics.Size(m)
}
func (m *VersionResourceMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResourceMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResourceMetrics proto.InternalMessageInfo

func (m *VersionResourceMetrics) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *VersionResourceMetrics) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *VersionResourceMetrics) GetMem() float64 {
	if m != nil {
		return m.Mem
	}
	return 0
}

type Response struct {
	VersionResourceMetrics []*VersionResourceMetrics `protobuf:"bytes,1,rep,name=versionResourceMetrics,proto3" json:"versionResourceMetrics,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_51f2826e78bd2e23, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetVersionResourceMetrics() []*VersionResourceMetrics {
	if m != nil {
		return m.VersionResourceMetrics
	}
	return nil
}

type VersionRequest struct {
	VersionName          string   `protobuf:"bytes,1,opt,name=versionName,proto3" json:"versionName,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FromDate             string   `protobuf:"bytes,3,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate               string   `protobuf:"bytes,4,opt,name=toDate,proto3" json:"toDate,omitempty"`
	Step                 int32    `protobuf:"varint,5,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51f2826e78bd2e23, []int{2}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

func (m *VersionRequest) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *VersionRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VersionRequest) GetFromDate() string {
	if m != nil {
		return m.FromDate
	}
	return ""
}

func (m *VersionRequest) GetToDate() string {
	if m != nil {
		return m.ToDate
	}
	return ""
}

func (m *VersionRequest) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func init() {
	proto.RegisterType((*VersionResourceMetrics)(nil), "resourcemetrics.VersionResourceMetrics")
	proto.RegisterType((*Response)(nil), "resourcemetrics.Response")
	proto.RegisterType((*VersionRequest)(nil), "resourcemetrics.VersionRequest")
}

func init() {
	proto.RegisterFile("proto/resourcemetricspb/resourcemetrics.proto", fileDescriptor_51f2826e78bd2e23)
}

var fileDescriptor_51f2826e78bd2e23 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x92, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x8d, 0xdd, 0xc6, 0x7a, 0x26, 0xfe, 0x39, 0x42, 0xa9, 0x43, 0x70, 0xf4, 0xc6, 0xdd,
	0x38, 0x65, 0xbe, 0x81, 0x08, 0x82, 0xe0, 0x90, 0x08, 0x0a, 0xde, 0x48, 0x57, 0x8f, 0x58, 0x24,
	0x4d, 0x4c, 0xd2, 0x3d, 0x8b, 0x0f, 0xe2, 0x03, 0x9a, 0x66, 0xdd, 0x94, 0x6e, 0xbb, 0xf3, 0xaa,
	0x27, 0xbf, 0xef, 0xf4, 0xcb, 0x77, 0x0e, 0x81, 0x33, 0xa5, 0xa5, 0x95, 0xe7, 0x9a, 0x8c, 0x2c,
	0x75, 0x46, 0x82, 0xac, 0xce, 0x33, 0xa3, 0xa6, 0x4d, 0x32, 0xf2, 0x7d, 0xb8, 0xd7, 0xc0, 0xc9,
	0x3d, 0x44, 0x8f, 0xa4, 0x4d, 0x2e, 0x0b, 0x5e, 0x2b, 0x77, 0x73, 0x05, 0x11, 0x5a, 0xaf, 0xa9,
	0xa5, 0x98, 0x0d, 0xd8, 0x30, 0xe4, 0xbe, 0xc6, 0x7d, 0x08, 0x32, 0x55, 0xc6, 0xdb, 0x0e, 0x31,
	0x5e, 0x95, 0x15, 0x11, 0x24, 0xe2, 0x60, 0x4e, 0x5c, 0x99, 0x7c, 0x40, 0xd7, 0x59, 0x29, 0x59,
	0x18, 0xc2, 0x17, 0x88, 0x66, 0x6b, 0xdd, 0x9d, 0x6b, 0x30, 0xec, 0x8d, 0x4f, 0x47, 0xcd, 0x98,
	0xeb, 0xc3, 0xf0, 0x0d, 0x36, 0xc9, 0x17, 0x83, 0xdd, 0xe5, 0x2f, 0x9f, 0x25, 0x19, 0x8b, 0x03,
	0xe8, 0xd5, 0xcd, 0x93, 0x54, 0x2c, 0xe2, 0xff, 0x45, 0x78, 0x0c, 0x61, 0xe1, 0xbe, 0x46, 0xa5,
	0x19, 0xf9, 0x59, 0x42, 0xfe, 0x0b, 0xb0, 0x0f, 0xdd, 0x37, 0x2d, 0xc5, 0x75, 0x35, 0x7b, 0xe0,
	0xc5, 0xe5, 0x19, 0x23, 0xe8, 0x58, 0xe9, 0x95, 0x96, 0x57, 0xea, 0x53, 0xb5, 0x2b, 0x63, 0x49,
	0xc5, 0x6d, 0x47, 0xdb, 0xdc, 0xd7, 0xe3, 0x6f, 0x06, 0x51, 0x23, 0xee, 0x03, 0xe9, 0x59, 0xee,
	0xae, 0xb8, 0x05, 0xb8, 0x21, 0x5b, 0xe7, 0xc6, 0x93, 0xcd, 0x4b, 0xf0, 0x13, 0xf5, 0x8f, 0x56,
	0x1a, 0x16, 0x0b, 0x4e, 0xb6, 0x70, 0x02, 0x3b, 0x4f, 0xa9, 0xcd, 0xde, 0xff, 0xc5, 0xed, 0x82,
	0x5d, 0x1d, 0x3e, 0x1f, 0xac, 0x3c, 0xa6, 0x69, 0xc7, 0xbf, 0x9e, 0xcb, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xe4, 0x7e, 0xda, 0x62, 0x6e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ResourceMetricsServiceClient is the client API for ResourceMetricsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceMetricsServiceClient interface {
	GetVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*Response, error)
	WatchVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (ResourceMetricsService_WatchVersionClient, error)
}

type resourceMetricsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewResourceMetricsServiceClient(cc grpc.ClientConnInterface) ResourceMetricsServiceClient {
	return &resourceMetricsServiceClient{cc}
}

func (c *resourceMetricsServiceClient) GetVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/resourcemetrics.ResourceMetricsService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceMetricsServiceClient) WatchVersion(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (ResourceMetricsService_WatchVersionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourceMetricsService_serviceDesc.Streams[0], "/resourcemetrics.ResourceMetricsService/WatchVersion", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourceMetricsServiceWatchVersionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourceMetricsService_WatchVersionClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type resourceMetricsServiceWatchVersionClient struct {
	grpc.ClientStream
}

func (x *resourceMetricsServiceWatchVersionClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ResourceMetricsServiceServer is the server API for ResourceMetricsService service.
type ResourceMetricsServiceServer interface {
	GetVersion(context.Context, *VersionRequest) (*Response, error)
	WatchVersion(*VersionRequest, ResourceMetricsService_WatchVersionServer) error
}

// UnimplementedResourceMetricsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResourceMetricsServiceServer struct {
}

func (*UnimplementedResourceMetricsServiceServer) GetVersion(ctx context.Context, req *VersionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedResourceMetricsServiceServer) WatchVersion(req *VersionRequest, srv ResourceMetricsService_WatchVersionServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchVersion not implemented")
}

func RegisterResourceMetricsServiceServer(s *grpc.Server, srv ResourceMetricsServiceServer) {
	s.RegisterService(&_ResourceMetricsService_serviceDesc, srv)
}

func _ResourceMetricsService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceMetricsServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcemetrics.ResourceMetricsService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceMetricsServiceServer).GetVersion(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceMetricsService_WatchVersion_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VersionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourceMetricsServiceServer).WatchVersion(m, &resourceMetricsServiceWatchVersionServer{stream})
}

type ResourceMetricsService_WatchVersionServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type resourceMetricsServiceWatchVersionServer struct {
	grpc.ServerStream
}

func (x *resourceMetricsServiceWatchVersionServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _ResourceMetricsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resourcemetrics.ResourceMetricsService",
	HandlerType: (*ResourceMetricsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _ResourceMetricsService_GetVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchVersion",
			Handler:       _ResourceMetricsService_WatchVersion_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/resourcemetricspb/resourcemetrics.proto",
}
