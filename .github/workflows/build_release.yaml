name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  docker-admin-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # check commit if folder engine/admin-api have any changes
      # set an env var with true or false is changes
      # if false just update docker image tag
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}

      - name: Push to Docker Hub RELEASE
        if: ${{ ! contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/admin-api
          file: ./engine/admin-api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-admin-api:${{ steps.get_version.outputs.VERSION }}

      - name: Push to Docker Hub ALPHA
        if: ${{ contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/admin-api
          file: ./engine/admin-api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-admin-api:${{ steps.get_version.outputs.VERSION }}
            konstellation/kre-admin-api:latest

  docker-admin-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}

      - name: Push to Docker Hub RELEASE
        if: ${{ ! contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/admin-ui
          file: ./engine/admin-ui/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-admin-ui:${{ steps.get_version.outputs.VERSION }}

      - name: Push to Docker Hub ALPHA
        if: ${{ contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/admin-ui
          file: ./engine/admin-ui/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-admin-ui:${{ steps.get_version.outputs.VERSION }}
            konstellation/kre-admin-ui:latest

  docker-k8s-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}

      - name: Push to Docker Hub RELEASE
        if: ${{ ! contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/k8s-manager
          file: ./engine/k8s-manager/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-k8s-manager:${{ steps.get_version.outputs.VERSION }}

      - name: Push to Docker Hub ALPHA
        if: ${{ contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/k8s-manager
          file: ./engine/k8s-manager/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-k8s-manager:${{ steps.get_version.outputs.VERSION }}
            konstellation/kre-k8s-manager:latest

  docker-nats-manager:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}

      - name: Push to Docker Hub RELEASE
        if: ${{ ! contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/nats-manager
          file: ./engine/nats-manager/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-nats-manager:${{ steps.get_version.outputs.VERSION }}

      - name: Push to Docker Hub ALPHA
        if: ${{ contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/nats-manager
          file: ./engine/nats-manager/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-nats-manager:${{ steps.get_version.outputs.VERSION }}
            konstellation/kre-nats-manager:latest

  docker-mongo-writer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}

      - name: Push to Docker Hub RELEASES
        if: ${{ ! contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/mongo-writer
          file: ./engine/mongo-writer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-mongo-writer:${{ steps.get_version.outputs.VERSION }}

      - name: Push to Docker Hub ALPHA
        if: ${{ contains( github.event.ref, 'alpha' ) }}
        uses: docker/build-push-action@v3
        with:
          context: ./engine/mongo-writer
          file: ./engine/mongo-writer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            konstellation/kre-mongo-writer:${{ steps.get_version.outputs.VERSION }}
            konstellation/kre-mongo-writer:latest

  helm:
    if: ${{ ! contains( github.event.ref, 'alpha' ) }}
    runs-on: ubuntu-latest
    needs:
      - docker-admin-api
      - docker-admin-ui
      - docker-k8s-manager
      - docker-mongo-writer
      - docker-nats-manager
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get Version
        id: get_version
        run: |
          # format version X.X.X
          RELEASE_VERSION=`echo "${GITHUB_REF#refs/tags/}" | sed -e 's/v//g' | sed -e 's/-alpha.*/.0/g'`
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> ${GITHUB_OUTPUT}
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}

      - uses: chrisdickinson/setup-yq@latest
      - name: Replace component version with YQ
        run:  |
          # set image tags on kre
          yq w -i helm/kre/values.yaml 'adminUI.image.tag' ${{ steps.get_version.outputs.VERSION }}
          yq w -i helm/kre/values.yaml 'adminApi.image.tag' ${{ steps.get_version.outputs.VERSION }}
          yq w -i helm/kre/values.yaml 'k8sManager.image.tag' ${{ steps.get_version.outputs.VERSION }}
          yq w -i helm/kre/values.yaml 'mongoWriter.image.tag' ${{ steps.get_version.outputs.VERSION }}

          # set app version and chart version for kre
          yq w -i helm/kre/Chart.yaml 'appVersion' ${{ steps.get_version.outputs.VERSION }}
          yq w -i helm/kre/Chart.yaml 'version' ${{ steps.get_version.outputs.RELEASE_VERSION }}

      - name: Add repositories
        run:  |
          helm repo add influxdata https://helm.influxdata.com/
          helm repo update

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.1
        with:
          charts_dir: 'helm'
          charts_repo_url: 'https://charts.konstellation.io'
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Update Helm Chart
        run:  |
          curl --request POST --header "${{ secrets.NOTIFY_TOKEN }}" "${{ secrets.NOTIFY_URL }}"${{ steps.get_version.outputs.RELEASE_VERSION }} >/dev/null 2>&1
